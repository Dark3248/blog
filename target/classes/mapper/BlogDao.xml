<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wjw.blog.dao.BlogDao">

    <!-- done 增-->
    <insert id="saveBlog" parameterType="com.wjw.blog.entity.Blog">
        insert into blog.blog ( id,title, content, first_picture, flag,
                                views, comment,publish,
                                recommend, create_time, update_time, type_id, user_id, description, tag_ids)
        values (#{id}, #{title}, #{content}, #{firstPicture}, #{flag}, #{views},
                #{comment}, #{publish}, #{recommend}, #{createTime},
                #{updateTime}, #{typeId}, #{userId}, #{description}, #{tagIds});
    </insert>

    <!--done 删除-->
    <delete id="deleteBlog">
        delete from blog.blog
        where id = #{id}
    </delete>

    <!--done 修改-->
    <update id="updateBlog" parameterType="com.wjw.blog.dto.BlogUpdate">
        update blog.blog
        set publish = #{publish},
            flag = #{flag},
            title = #{title},
            content = #{content},
            type_id = #{typeId},
            first_picture = #{firstPicture},
            description = #{description},
            recommend = #{recommend},
            comment = #{comment},
            update_time = #{updateTime},
            tag_ids = #{tagIds}
        where id = #{id}
    </update>

    <!--done-->
    <select id="getBlogById" resultType="com.wjw.blog.dto.BlogUpdate">
        select b.id, b.publish, b.flag, b.title, b.content, b.type_id,
               b.first_picture, b.description, b.recommend, b.comment, b.tag_ids
        from blog.blog b
        where  b.id = #{id}
    </select>

    <!--done  获取博客展示结果  -->
    <resultMap id="blog" type="com.wjw.blog.dto.BlogQuery">
        <id column="bid" property="id"/>
        <result column="title" property="title"/>
        <result column="update_time" property="updateTime" />
        <result column="recommend" property="recommend" />
        <result column="type_id" property="typeId" />
        <result column="publish" property="publish" />
        <association property="type" javaType="com.wjw.blog.entity.Type">
            <id column="tid" property="id" />
            <result column="name" property="name" />
        </association>
    </resultMap>
    <select id="getAllBlogQuery" resultMap="blog">
        select b.id bid, b.title, b.update_time, b.recommend, b.type_id, b.publish, t.id tid, t.name
        from blog.blog b left join blog.type t on b.type_id = t.id
        order by b.update_time desc
    </select>

    <!--done  根据搜索条件返回结果-->
    <select id="getBlogBySearch" parameterType="com.wjw.blog.dto.BlogSearch" resultMap="blog">
        select b.id bid, b.title, b.update_time, b.recommend, b.type_id, b.publish, t.id tid, t.name
        from blog.blog b left join blog.type t on b.type_id = t.id
        <where>
            <if test="typeId != null">
                and b.type_id = #{typeId}
            </if>
            <if test="title != null">
                and b.title like '%${title}%'
            </if>
        </where>
        order by b.update_time desc
    </select>

    <!-- done   添加博客和标签之间的联系-->
    <insert id="saveBlogAndTag" parameterType="com.wjw.blog.entity.BlogAndTag">
        insert into blog.blog_tag (blog_id, tag_id) values (#{blogId}, #{tagId});
    </insert>

    <!--done 删除联系-->
    <delete id="deleteBlogAndTag" >
        delete from blog.blog_tag where blog_id = #{blogId}
    </delete>

    <!--    获取所有在首页展示的博客-->
    <resultMap id="blogShow" type="com.wjw.blog.dto.BlogShow">
        <id column="id" property="id" />
        <result column="title" property="title" />
        <result column="first_picture" property="firstPicture" />
        <result column="views" property="views" />
        <result column="update_time" property="updateTime" />
        <result column="description" property="description" />
        <result column="name" property="typeName" />
        <result column="nickname" property="nickname" />
        <result column="avatar" property="avatar" />
    </resultMap>
    <select id="getAllBlogShow" resultMap="blogShow">
        select b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
               t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u
        where b.type_id = t.id and b.user_id = u.id and b.publish = 1
        order by b.id desc
    </select>

    <!--done    获取首页推荐博客-->
    <select id="getAllRecommendBlog" resultType="com.wjw.blog.dto.BlogRecommend">
        select id, title, recommend from blog.blog
        where recommend = 1
    </select>

    <!--done    根据typeId获取博客-->
    <select id="getByTypeId" resultMap="blogShow">
        select b.id,b.title,b.first_picture, b.views,b.update_time,b.description,
               t.name, u.nickname, u.avatar
        from blog.blog b, blog.type t, blog.user u
        where b.type_id = t.id and u.id = b.user_id and b.type_id = #{typeId}
        order by b.id desc
    </select>

    <!--done    根据tagId获取博客-->
    <select id="getByTagId" resultMap="blogShow">
        select b.id,b.title,b.first_picture, b.views,b.update_time,b.description,
               t1.name, u.nickname, u.avatar
        from blog.blog b, blog.tag t, blog.user u, blog.blog_tag bt, blog.type t1
        where bt.tag_id = t.id and bt.blog_id = b.id and b.type_id = t1.id and u.id = b.user_id and t.id = #{tagId}
        order by b.id desc
    </select>

    <!--done    全局检索-->
    <select id="getSearchBlog" resultMap="blogShow">
        <bind name="pattern" value="'%' + query + '%'" />
        select distinct b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
        t.name, u.nickname, u.avatar
        from blog.blog b, blog.type t,blog.user u
        where b.type_id = t.id and u.id = b.user_id and (b.title like #{pattern} or b.content like #{pattern})
        order by b.id desc
    </select>

    <!--    根据id得到博客详情-->
    <resultMap id="blogDetail" type="com.wjw.blog.dto.BlogDetail">
        <id property="id" column="bid"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="flag" column="flag"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="views" column="views"/>
        <result property="updateTime" column="update_time"/>
        <result property="createTime" column="create_time"/>
        <result property="comment" column="comment"/>
        <result property="nickname" column="nickname"/>
        <result property="avatar" column="avatar"/>
        <collection property="tags" ofType="com.wjw.blog.entity.Tag">
            <id property="id" column="tid"/>
            <result property="name" column="name"/>
        </collection>
    </resultMap>
    <select id="getBlogDetail" resultMap="blogDetail">
        select b.id bid, b.first_picture, b.flag, b.title, b.content, b.views, b.update_time,
               b.create_time, b.comment, u.nickname,u.avatar,
               t.id tid ,t.name
        from blog.blog b,blog.user u,blog.tag t,blog.blog_tag tb
        where b.user_id = u.id and tb.blog_id = b.id and tb.tag_id = t.id and b.id = #{id}
    </select>

    <!--    查询年份-->
    <select id="getYears" resultType="String">
        select date_format(create_time, '%Y') year from blog.blog
        group by year
        order by year desc
    </select>

    <select id="getBlogByArchives" resultType="com.wjw.blog.dto.BlogArchives">
        select id, title, create_time, flag, date_format(create_time, '%Y') year from blog.blog
        where date_format(create_time, '%Y') = #{year} and publish = 1
    </select>

</mapper>