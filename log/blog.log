2020-08-02 15:54:12.735  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Starting BlogApplication on LAPTOP-389VIUI1 with PID 2316 (E:\java workspace\blog\target\classes started by 王金伟 in E:\java workspace\blog)
2020-08-02 15:54:12.748 DEBUG 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Running with Spring Boot v2.3.0.RELEASE, Spring v5.2.6.RELEASE
2020-08-02 15:54:12.750  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : No active profile set, falling back to default profiles: default
2020-08-02 15:54:13.022  INFO 2316 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-08-02 15:54:13.025  INFO 2316 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-08-02 15:54:15.187  INFO 2316 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-08-02 15:54:15.198  INFO 2316 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-08-02 15:54:15.198  INFO 2316 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-08-02 15:54:15.330  INFO 2316 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-08-02 15:54:15.330  INFO 2316 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2302 ms
2020-08-02 15:54:16.232  INFO 2316 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-08-02 15:54:16.333  INFO 2316 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-08-02 15:54:16.916  INFO 2316 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-08-02 15:54:16.953  INFO 2316 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-08-02 15:54:16.964  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Started BlogApplication in 5.154 seconds (JVM running for 6.909)
2020-08-02 15:54:23.233  INFO 2316 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-02 15:54:23.233  INFO 2316 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-08-02 15:54:23.249  INFO 2316 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 16 ms
2020-08-02 15:54:29.689  INFO 2316 --- [http-nio-8080-exec-10] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-08-02 15:54:34.810 ERROR 2316 --- [http-nio-8080-exec-10] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477) [HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560) [HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) [HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) [HikariCP-3.4.5.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158) [spring-jdbc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116) [spring-jdbc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79) [spring-jdbc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) [mybatis-spring-2.0.4.jar:2.0.4]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) [mybatis-spring-2.0.4.jar:2.0.4]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336) [mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) [mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) [mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) [mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) [mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) [mybatis-3.5.4.jar:3.5.4]
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:143) [pagehelper-5.1.2.jar:na]
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61) [mybatis-3.5.4.jar:3.5.4]
	at com.sun.proxy.$Proxy97.query(Unknown Source) [na:na]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) [mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) [mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76) [mybatis-3.5.4.jar:3.5.4]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_241]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) [mybatis-spring-2.0.4.jar:2.0.4]
	at com.sun.proxy.$Proxy71.selectOne(Unknown Source) [na:na]
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159) [mybatis-spring-2.0.4.jar:2.0.4]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87) [mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144) [mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85) [mybatis-3.5.4.jar:3.5.4]
	at com.sun.proxy.$Proxy78.findByUsernameAndPassword(Unknown Source) [na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_241]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) [spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) [spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) [spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) [spring-tx-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) [spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) [spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at com.sun.proxy.$Proxy79.findByUsernameAndPassword(Unknown Source) [na:na]
	at com.wjw.blog.service.impl.UserServiceImpl.checkUser(UserServiceImpl.java:18) [classes/:na]
	at com.wjw.blog.controller.admin.LoginController.login(LoginController.java:32) [classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_241]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105) [spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) [spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) [spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) [spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) [spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) [spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) [spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_241]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_241]
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_241]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_241]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_241]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	... 101 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[na:1.8.0_241]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) ~[na:1.8.0_241]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[na:1.8.0_241]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[na:1.8.0_241]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[na:1.8.0_241]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[na:1.8.0_241]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[na:1.8.0_241]
	at java.net.Socket.connect(Socket.java:606) ~[na:1.8.0_241]
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	... 104 common frames omitted

2020-08-02 15:54:34.829 ERROR 2316 --- [http-nio-8080-exec-10] c.w.b.h.ControllerExceptionHandler       : Request URL : [/admin/login], Exception : [{}]

org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
### The error may exist in file [E:\java workspace\blog\target\classes\mapper\UserDao.xml]
### The error may involve com.wjw.blog.dao.UserDao.findByUsernameAndPassword
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92) ~[mybatis-spring-2.0.4.jar:2.0.4]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440) ~[mybatis-spring-2.0.4.jar:2.0.4]
	at com.sun.proxy.$Proxy71.selectOne(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:159) ~[mybatis-spring-2.0.4.jar:2.0.4]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85) ~[mybatis-3.5.4.jar:3.5.4]
	at com.sun.proxy.$Proxy78.findByUsernameAndPassword(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_241]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at com.sun.proxy.$Proxy79.findByUsernameAndPassword(Unknown Source) ~[na:na]
	at com.wjw.blog.service.impl.UserServiceImpl.checkUser(UserServiceImpl.java:18) ~[classes/:na]
	at com.wjw.blog.controller.admin.LoginController.login(LoginController.java:32) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_241]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) [spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_241]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_241]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.35.jar:9.0.35]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_241]
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
### The error may exist in file [E:\java workspace\blog\target\classes\mapper\UserDao.xml]
### The error may involve com.wjw.blog.dao.UserDao.findByUsernameAndPassword
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76) ~[mybatis-3.5.4.jar:3.5.4]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_241]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_241]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_241]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.4.jar:2.0.4]
	... 69 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82) ~[spring-jdbc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:80) ~[mybatis-spring-2.0.4.jar:2.0.4]
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:67) ~[mybatis-spring-2.0.4.jar:2.0.4]
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.5.4.jar:3.5.4]
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:143) ~[pagehelper-5.1.2.jar:na]
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61) ~[mybatis-3.5.4.jar:3.5.4]
	at com.sun.proxy.$Proxy97.query(Unknown Source) ~[na:na]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.4.jar:3.5.4]
	... 76 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-3.4.5.jar:na]
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158) ~[spring-jdbc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116) ~[spring-jdbc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79) ~[spring-jdbc-5.2.6.RELEASE.jar:5.2.6.RELEASE]
	... 88 common frames omitted
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_241]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_241]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_241]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_241]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:91) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:956) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:826) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	... 101 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) ~[na:1.8.0_241]
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) ~[na:1.8.0_241]
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) ~[na:1.8.0_241]
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) ~[na:1.8.0_241]
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) ~[na:1.8.0_241]
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) ~[na:1.8.0_241]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) ~[na:1.8.0_241]
	at java.net.Socket.connect(Socket.java:606) ~[na:1.8.0_241]
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:65) ~[mysql-connector-java-8.0.20.jar:8.0.20]
	... 104 common frames omitted

2020-08-02 15:54:34.835  WARN 2316 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
### The error may exist in file [E:\java workspace\blog\target\classes\mapper\UserDao.xml]
### The error may involve com.wjw.blog.dao.UserDao.findByUsernameAndPassword
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.]
2020-08-02 15:55:03.380  INFO 2316 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-08-02 15:55:04.695  INFO 2316 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-08-02 15:55:04.706 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.d.U.findByUsernameAndPassword      : ==>  Preparing: select * from blog.user where username = ? and password = ?; 
2020-08-02 15:55:04.735 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.d.U.findByUsernameAndPassword      : ==> Parameters: wjw(String), e10adc3949ba59abbe56e057f20f883e(String)
2020-08-02 15:55:04.832 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.d.U.findByUsernameAndPassword      : <==      Total: 1
2020-08-02 15:55:08.228 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id 
2020-08-02 15:55:08.228 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2020-08-02 15:55:08.291 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2020-08-02 15:55:08.293 DEBUG 2316 --- [http-nio-8080-exec-5] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: select b.id bid, b.title, b.update_time, b.recommend, b.type_id, t.id tid, t.name from blog.blog b left join blog.type t on b.type_id = t.id order by b.update_time desc LIMIT ? 
2020-08-02 15:55:08.294 DEBUG 2316 --- [http-nio-8080-exec-5] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2020-08-02 15:55:08.298 DEBUG 2316 --- [http-nio-8080-exec-5] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 3
2020-08-02 15:55:08.304 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 15:55:08.304 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 15:55:08.306 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 15:55:10.487 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.type 
2020-08-02 15:55:10.488 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==> Parameters: 
2020-08-02 15:55:10.490 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.blog.dao.TypeDao.getAdminType_COUNT  : <==      Total: 1
2020-08-02 15:55:10.491 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name LIMIT ? 
2020-08-02 15:55:10.491 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 5(Integer)
2020-08-02 15:55:10.494 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 5
2020-08-02 15:56:42.082 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.type 
2020-08-02 15:56:42.082 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==> Parameters: 
2020-08-02 15:56:42.197 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.blog.dao.TypeDao.getAdminType_COUNT  : <==      Total: 1
2020-08-02 15:56:42.198 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name LIMIT ? 
2020-08-02 15:56:42.198 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 5(Integer)
2020-08-02 15:56:42.200 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 5
2020-08-02 15:56:44.845 DEBUG 2316 --- [http-nio-8080-exec-9] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.tag 
2020-08-02 15:56:44.846 DEBUG 2316 --- [http-nio-8080-exec-9] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==> Parameters: 
2020-08-02 15:56:45.004 DEBUG 2316 --- [http-nio-8080-exec-9] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : <==      Total: 1
2020-08-02 15:56:45.005 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TagDao.getAdminTag      : ==>  Preparing: select * from blog.tag order by name LIMIT ? 
2020-08-02 15:56:45.005 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TagDao.getAdminTag      : ==> Parameters: 5(Integer)
2020-08-02 15:56:45.006 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TagDao.getAdminTag      : <==      Total: 5
2020-08-02 15:56:54.682 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.type 
2020-08-02 15:56:54.682 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==> Parameters: 
2020-08-02 15:56:54.684 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.blog.dao.TypeDao.getAdminType_COUNT  : <==      Total: 1
2020-08-02 15:56:54.685 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name LIMIT ? 
2020-08-02 15:56:54.685 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 5(Integer)
2020-08-02 15:56:54.687 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 5
2020-08-02 15:56:58.195 DEBUG 2316 --- [http-nio-8080-exec-8] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.tag 
2020-08-02 15:56:58.196 DEBUG 2316 --- [http-nio-8080-exec-8] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==> Parameters: 
2020-08-02 15:56:58.198 DEBUG 2316 --- [http-nio-8080-exec-8] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : <==      Total: 1
2020-08-02 15:56:58.199 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.TagDao.getAdminTag      : ==>  Preparing: select * from blog.tag order by name LIMIT ? 
2020-08-02 15:56:58.199 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.TagDao.getAdminTag      : ==> Parameters: 5(Integer)
2020-08-02 15:56:58.201 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.TagDao.getAdminTag      : <==      Total: 5
2020-08-02 15:56:59.550 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.type 
2020-08-02 15:56:59.550 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==> Parameters: 
2020-08-02 15:56:59.553 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.blog.dao.TypeDao.getAdminType_COUNT  : <==      Total: 1
2020-08-02 15:56:59.554 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name LIMIT ? 
2020-08-02 15:56:59.554 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 5(Integer)
2020-08-02 15:56:59.556 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 5
2020-08-02 15:57:01.525 DEBUG 2316 --- [http-nio-8080-exec-5] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.tag 
2020-08-02 15:57:01.526 DEBUG 2316 --- [http-nio-8080-exec-5] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==> Parameters: 
2020-08-02 15:57:01.529 DEBUG 2316 --- [http-nio-8080-exec-5] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : <==      Total: 1
2020-08-02 15:57:01.530 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TagDao.getAdminTag      : ==>  Preparing: select * from blog.tag order by name LIMIT ? 
2020-08-02 15:57:01.531 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TagDao.getAdminTag      : ==> Parameters: 5(Integer)
2020-08-02 15:57:01.533 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TagDao.getAdminTag      : <==      Total: 5
2020-08-02 15:57:02.261 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.type 
2020-08-02 15:57:02.261 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==> Parameters: 
2020-08-02 15:57:02.262 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.blog.dao.TypeDao.getAdminType_COUNT  : <==      Total: 1
2020-08-02 15:57:02.263 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name LIMIT ? 
2020-08-02 15:57:02.264 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 5(Integer)
2020-08-02 15:57:02.266 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 5
2020-08-02 15:57:18.893 DEBUG 2316 --- [http-nio-8080-exec-3] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.tag 
2020-08-02 15:57:18.894 DEBUG 2316 --- [http-nio-8080-exec-3] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==> Parameters: 
2020-08-02 15:57:18.938 DEBUG 2316 --- [http-nio-8080-exec-3] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : <==      Total: 1
2020-08-02 15:57:18.939 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TagDao.getAdminTag      : ==>  Preparing: select * from blog.tag order by name LIMIT ? 
2020-08-02 15:57:18.939 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TagDao.getAdminTag      : ==> Parameters: 5(Integer)
2020-08-02 15:57:18.941 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TagDao.getAdminTag      : <==      Total: 5
2020-08-02 15:57:23.022 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.type 
2020-08-02 15:57:23.023 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==> Parameters: 
2020-08-02 15:57:23.025 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.blog.dao.TypeDao.getAdminType_COUNT  : <==      Total: 1
2020-08-02 15:57:23.025 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name LIMIT ? 
2020-08-02 15:57:23.026 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 5(Integer)
2020-08-02 15:57:23.027 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 5
2020-08-02 15:57:25.917 DEBUG 2316 --- [http-nio-8080-exec-1] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.tag 
2020-08-02 15:57:25.918 DEBUG 2316 --- [http-nio-8080-exec-1] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==> Parameters: 
2020-08-02 15:57:25.920 DEBUG 2316 --- [http-nio-8080-exec-1] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : <==      Total: 1
2020-08-02 15:57:25.920 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TagDao.getAdminTag      : ==>  Preparing: select * from blog.tag order by name LIMIT ? 
2020-08-02 15:57:25.921 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TagDao.getAdminTag      : ==> Parameters: 5(Integer)
2020-08-02 15:57:25.922 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TagDao.getAdminTag      : <==      Total: 5
2020-08-02 15:57:27.237 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.type 
2020-08-02 15:57:27.237 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==> Parameters: 
2020-08-02 15:57:27.239 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.blog.dao.TypeDao.getAdminType_COUNT  : <==      Total: 1
2020-08-02 15:57:27.240 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name LIMIT ? 
2020-08-02 15:57:27.240 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 5(Integer)
2020-08-02 15:57:27.241 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 5
2020-08-02 15:57:28.495 DEBUG 2316 --- [http-nio-8080-exec-9] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.tag 
2020-08-02 15:57:28.496 DEBUG 2316 --- [http-nio-8080-exec-9] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==> Parameters: 
2020-08-02 15:57:28.498 DEBUG 2316 --- [http-nio-8080-exec-9] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : <==      Total: 1
2020-08-02 15:57:28.499 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TagDao.getAdminTag      : ==>  Preparing: select * from blog.tag order by name LIMIT ? 
2020-08-02 15:57:28.500 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TagDao.getAdminTag      : ==> Parameters: 5(Integer)
2020-08-02 15:57:28.501 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TagDao.getAdminTag      : <==      Total: 5
2020-08-02 15:57:29.283 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.type 
2020-08-02 15:57:29.284 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==> Parameters: 
2020-08-02 15:57:29.285 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.blog.dao.TypeDao.getAdminType_COUNT  : <==      Total: 1
2020-08-02 15:57:29.286 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name LIMIT ? 
2020-08-02 15:57:29.286 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 5(Integer)
2020-08-02 15:57:29.288 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 5
2020-08-02 15:58:06.390 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.type 
2020-08-02 15:58:06.391 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==> Parameters: 
2020-08-02 15:58:06.399 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.blog.dao.TypeDao.getAdminType_COUNT  : <==      Total: 1
2020-08-02 15:58:06.400 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name LIMIT ? 
2020-08-02 15:58:06.400 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 5(Integer)
2020-08-02 15:58:06.401 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 5
2020-08-02 16:05:06.272 DEBUG 2316 --- [http-nio-8080-exec-2] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id 
2020-08-02 16:05:06.273 DEBUG 2316 --- [http-nio-8080-exec-2] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2020-08-02 16:05:06.275 DEBUG 2316 --- [http-nio-8080-exec-2] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2020-08-02 16:05:06.278 DEBUG 2316 --- [http-nio-8080-exec-2] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: select b.id bid, b.title, b.update_time, b.recommend, b.type_id, t.id tid, t.name from blog.blog b left join blog.type t on b.type_id = t.id order by b.update_time desc LIMIT ? 
2020-08-02 16:05:06.278 DEBUG 2316 --- [http-nio-8080-exec-2] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2020-08-02 16:05:06.280 DEBUG 2316 --- [http-nio-8080-exec-2] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 3
2020-08-02 16:05:06.281 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:05:06.281 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:05:06.283 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:05:08.803 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getBlogById     : ==>  Preparing: select b.id, b.publish, b.flag, b.title, b.content, b.type_id, b.first_picture, b.description, b.recommend, b.share_statement, b.appreciation, b.comment, b.tag_ids from blog.blog b where b.id = ? 
2020-08-02 16:05:08.804 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getBlogById     : ==> Parameters: 1596270221107(Long)
2020-08-02 16:05:08.810 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getBlogById     : <==      Total: 1
2020-08-02 16:05:08.810 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:05:08.811 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:05:08.813 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:05:08.815 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.TagDao.getAdminTag      : ==>  Preparing: select * from blog.tag order by name 
2020-08-02 16:05:08.816 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.TagDao.getAdminTag      : ==> Parameters: 
2020-08-02 16:05:08.817 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.TagDao.getAdminTag      : <==      Total: 5
2020-08-02 16:05:22.275 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.updateBlog      : ==>  Preparing: update blog.blog set publish = ?, flag = ?, title = ?, content = ?, type_id = ?, first_picture = ?, description = ?, recommend = ?, share_statement = ?, appreciation = ?, comment = ?, update_time = ?, tag_ids = ? where id = ? 
2020-08-02 16:05:22.277 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.updateBlog      : ==> Parameters: true(Boolean), 原创(String), 标题1(String), # 标题(String), 21(Long), https://picsum.photos/id/1004/100/100(String), 描述(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-08-02 16:05:22.273(Timestamp), 26,25,29(String), 1596270221107(Long)
2020-08-02 16:05:22.280 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.updateBlog      : <==    Updates: 1
2020-08-02 16:05:22.438 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id 
2020-08-02 16:05:22.439 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2020-08-02 16:05:22.440 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2020-08-02 16:05:22.440 DEBUG 2316 --- [http-nio-8080-exec-4] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: select b.id bid, b.title, b.update_time, b.recommend, b.type_id, t.id tid, t.name from blog.blog b left join blog.type t on b.type_id = t.id order by b.update_time desc LIMIT ? 
2020-08-02 16:05:22.441 DEBUG 2316 --- [http-nio-8080-exec-4] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2020-08-02 16:05:22.443 DEBUG 2316 --- [http-nio-8080-exec-4] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 3
2020-08-02 16:05:22.443 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:05:22.444 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:05:22.446 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:06:54.308 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getBlogById     : ==>  Preparing: select b.id, b.publish, b.flag, b.title, b.content, b.type_id, b.first_picture, b.description, b.recommend, b.share_statement, b.appreciation, b.comment, b.tag_ids from blog.blog b where b.id = ? 
2020-08-02 16:06:54.309 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getBlogById     : ==> Parameters: 1596213997903(Long)
2020-08-02 16:06:54.310 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getBlogById     : <==      Total: 1
2020-08-02 16:06:54.311 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:06:54.311 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:06:54.313 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:06:54.315 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TagDao.getAdminTag      : ==>  Preparing: select * from blog.tag order by name 
2020-08-02 16:06:54.316 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TagDao.getAdminTag      : ==> Parameters: 
2020-08-02 16:06:54.317 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TagDao.getAdminTag      : <==      Total: 5
2020-08-02 16:11:02.604 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.updateBlog      : ==>  Preparing: update blog.blog set publish = ?, flag = ?, title = ?, content = ?, type_id = ?, first_picture = ?, description = ?, recommend = ?, share_statement = ?, appreciation = ?, comment = ?, update_time = ?, tag_ids = ? where id = ? 
2020-08-02 16:11:02.606 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.updateBlog      : ==> Parameters: true(Boolean), 原创(String), Java复习记录(String), [TOC]

## 基本数据类型

![img](https://images2017.cnblogs.com/blog/1170065/201801/1170065-20180104154110299-576214776.png)

整形常量默认为int，浮点型常量默认为double

+两边如果有String类型就是连接符，否则是运算符



## 包装类

基本类型都有对应的包装类型，基本类型与其对应的包装类型之间的赋值使用自动装箱与拆箱完成。

```java
Integer x = 2;     // 装箱 调用了 Integer.valueOf(2)
int y = x;         // 拆箱 调用了 X.intValue()
```

#### 用途

- 集合不允许存放基本数据类型，故常用包装类
- 包含了每种基本类型的相关属性，如最大值，最小值，所占位数等
- 作为基本数据类型对应的类类型，提供了一系列实用的对象操作，如类型转换，进制转换等

#### 和基本类型的对比

- 通过引用指向实例，具体的实例保存在堆里；基本类型直接保存值在栈里
- 初值为null；基本类型的初值视具体的类型而定

#### 注意

- 无论如何，Integer与new Integer不会相等。不会经历拆箱过程，new出来的对象存放在堆中，而非new的Integer常量则在常量池（在方法区），他们的内存地址不一样，所以为false。

- 两个都是非new出来的Integer，如果数在-128到127之间，则是true,否则为false。

  ```java
  Integer x = new Integer(123);
  Integer y = new Integer(123);
  System.out.println(x == y);    // false
  Integer z = Integer.valueOf(123);
  Integer k = Integer.valueOf(123);
  System.out.println(z == k);   // true
  ```

- 两个都是new出来的,都为false。还是内存地址不一样。

- int和Integer(无论new否)比，都为true，因为会把Integer自动拆箱为int再去比。

#### 基本类型对应的缓存池(缓存池中的对象已经创建好存在常量池中)

- boolean values true and false
- all byte values
- short values between -128 and 127
- int values between -128 and 127
- char in the range \u0000 to \u007F

在使用这些基本类型对应的包装类型时，如果该数值范围在缓存池范围内，就可以直接使用缓存池中的对象。



## String

String 类被 final修饰，因此它不可被继承。(Integer 等包装类也不能被继承）

String的成员变量被final和private修饰，所以初始化后不可更改引用，外界也不能更改

#### 不可变的好处

**1. 可以缓存 hash 值**

因为 String 的 hash 值经常被使用，例如 String 用做 HashMap 的 key。不可变的特性可以使得 hash 值也不可变，因此只需要进行一次计算。

**2. String Pool 的需要**

如果一个 String 对象已经被创建过了，那么就会从 String Pool 中取得引用。只有 String 是不可变的，才可能使用 String Pool。

[![img](https://camo.githubusercontent.com/152a310f7698bb23ae201081c5c497b5c1d396d9/68747470733a2f2f63732d6e6f7465732d313235363130393739362e636f732e61702d6775616e677a686f752e6d7971636c6f75642e636f6d2f696d6167652d32303139313231303030343133323839342e706e67)](https://camo.githubusercontent.com/152a310f7698bb23ae201081c5c497b5c1d396d9/68747470733a2f2f63732d6e6f7465732d313235363130393739362e636f732e61702d6775616e677a686f752e6d7971636c6f75642e636f6d2f696d6167652d32303139313231303030343133323839342e706e67)



**3. 安全性**

String 经常作为参数，String 不可变性可以保证参数不可变。例如在作为网络连接参数的情况下，如果 String 是可变的，那么在网络连接过程中，String 被改变，改变 String 的那一方以为现在连接的是其它主机，而实际情况却不一定是。

**4. 线程安全**

String 不可变性天生具备线程安全，可以在多个线程中安全地使用。



## String，StringBuffer，StringBuilder

**1. 可变性**

- String 不可变
- StringBuffer 和 StringBuilder 可变

**2. 线程安全**

- String 不可变，因此是线程安全的
- StringBuilder 不是线程安全的
- StringBuffer 是线程安全的，内部使用 synchronized 进行同步

[StackOverflow : String, StringBuffer, and StringBuilder](https://stackoverflow.com/questions/2971315/string-stringbuffer-and-stringbuilder)



## String Pool

字符串常量池（String Pool）保存着所有字符串字面量（literal strings），这些字面量在编译时期就确定。不仅如此，还可以使用 String 的 intern() 方法在运行过程将字符串添加到 String Pool 中。

当一个字符串调用 intern() 方法时，如果 String Pool 中已经存在一个字符串和该字符串值相等（使用 equals() 方法进行确定），那么就会返回 String Pool 中字符串的引用；否则，就会在 String Pool 中添加一个新的字符串，并返回这个新字符串的引用。

下面示例中，s1 和 s2 采用 new String() 的方式新建了两个不同字符串，而 s3 和 s4 是通过 s1.intern() 方法取得同一个字符串引用。intern() 首先把 s1 引用的字符串放到 String Pool 中，然后返回这个字符串引用。因此 s3 和 s4 引用的是同一个字符串。

```
String s1 = new String("aaa");
String s2 = new String("aaa");
System.out.println(s1 == s2);           // false
String s3 = s1.intern();
String s4 = s1.intern();
System.out.println(s3 == s4);           // true
```

如果是采用 "bbb" 这种字面量的形式创建字符串，会自动地将字符串放入 String Pool 中。

```
String s5 = "bbb";
String s6 = "bbb";
System.out.println(s5 == s6);  // true
```

#### new String("abc")

使用这种方式一共会创建两个字符串对象（前提是 String Pool 中还没有 "abc" 字符串对象）。

- "abc" 属于字符串字面量，因此编译时期会在 String Pool 中创建一个字符串对象，指向这个 "abc" 字符串字面量；
- 而使用 new 的方式会在堆中创建一个字符串对象。

#### String创建对象问题

https://www.cnblogs.com/chenghuanhuaning/articles/11255642.html



## 参数传递

Java 的参数是以值传递的形式传入方法中，而不是引用传递。



## float 和 double

Java 不能隐式执行向下转型，因为这会使得精度降低。

1.1 字面量属于 double 类型，不能直接将 1.1 直接赋值给 float 变量，因为这是向下转型。

```
// float f = 1.1;
```

1.1f 字面量才是 float 类型。

```
float f = 1.1f;
```



## 隐式类型转换

因为字面量 1 是 int 类型，它比 short 类型精度要高，因此不能隐式地将 int 类型向下转型为 short 类型。

```
short s1 = 1;
// s1 = s1 + 1;
```

但是使用 += 或者 ++ 运算符会执行隐式类型转换。

```
s1 += 1;
s1++;
```

上面的语句相当于将 s1 + 1 的计算结果进行了向下转型：

```
s1 = (short) (s1 + 1);
```



## final

#### 修饰类

表明这个类不能被继承，final类中的所有成员方法都会被隐式地指定为final方法

#### 修饰方法

父类的final方法是不能被子类所覆盖的，即此方法不能被重写

但是如果访问权限为private，那么这个方法不能直接继承此方法，此时可以在子类中定义同名的方法名和参数（类的private方法会被隐式地指定为final方法）

#### 修饰变量

**final成员变量表示常量，只能被赋值一次，赋值后值不再改变。**

当final修饰一个**基本数据类型**时，表示该基本数据类型的值一旦**在初始化后便不能发生变化**；如果final修饰一个**引用类型**时，则在对其**初始化之后便不能再让其指向其他对象**了，但**该引用所指向的对象的内容是可以发生变化的**。本质上是一回事，因为引用的值是一个地址，final要求值，即地址的值不发生变化。

final修饰一个**成员变量**（属性），**必须在定义时或者构造器中进行初始化赋值**，**而且final变量一旦被初始化赋值之后，就不能再被赋值了**。

当函数的参数类型声明为final时，说明该参数是只读型的。即你可以读取使用该参数，但是无法改变该参数的值。

#### final变量和普通变量的区别

https://blog.csdn.net/hc1428090104/article/details/99218541



## static

**1. 静态变量**

- 静态变量：又称为类变量，也就是说这个变量属于类的，类所有的实例都共享静态变量，可以直接通过类名来访问它。静态变量在内存中只存在一份。
- 实例变量：每创建一个实例就会产生一个实例变量，它与该实例同生共死。

**2. 静态方法**

静态方法在类加载的时候就存在了，它不依赖于任何实例。所以静态方法必须有实现，也就是说它不能是抽象方法。

只能访问所属类的静态字段和静态方法，方法中不能有 this 和 super 关键字，因为这两个关键字与具体对象关联。

**3. 静态语句块**

静态语句块在类初始化时运行一次。

```
public class A {
    static {
        System.out.println("123");
    }

    public static void main(String[] args) {
        A a1 = new A();
        A a2 = new A();
    }
}
```

**4. 静态内部类**

非静态内部类依赖于外部类的实例，也就是说需要先创建外部类实例，才能用这个实例去创建非静态内部类。而静态内部类不需要。

```
public class OuterClass {

    class InnerClass {
    }

    static class StaticInnerClass {
    }

    public static void main(String[] args) {
        // InnerClass innerClass = new InnerClass(); // 'OuterClass.this' cannot be referenced from a static context
        OuterClass outerClass = new OuterClass();
        InnerClass innerClass = outerClass.new InnerClass();
        StaticInnerClass staticInnerClass = new StaticInnerClass();
    }
}
```

静态内部类不能访问外部类的非静态的变量和方法。

**5. 初始化顺序**

静态变量和静态语句块优先于实例变量和普通语句块，静态变量和静态语句块的初始化顺序取决于它们在代码中的顺序。

```
public static String staticField = "静态变量";
static {
    System.out.println("静态语句块");
}
public String field = "实例变量";
{
    System.out.println("普通语句块");
}
```

最后才是构造函数的初始化。

```
public InitialOrderTest() {
    System.out.println("构造函数");
}
```

存在继承的情况下，初始化顺序为：

- 父类（静态变量、静态语句块）
- 子类（静态变量、静态语句块）
- 父类（实例变量、普通语句块）
- 父类（构造函数）
- 子类（实例变量、普通语句块）
- 子类（构造函数）



## Object 通用方法

#### equals()

- 对于基本类型，== 判断两个值是否相等，基本类型没有 equals() 方法。
- 对于引用类型，== 判断两个变量是否引用同一个对象，而 equals() 判断引用的对象是否等价。

#### hashCode()

hashCode() 返回哈希值，而 equals() 是用来判断两个对象是否等价。等价的两个对象散列值一定相同，但是散列值相同的两个对象不一定等价，这是因为计算哈希值具有随机性，两个值不同的对象可能计算出相同的哈希值。

在覆盖 equals() 方法时应当总是覆盖 hashCode() 方法，保证等价的两个对象哈希值也相等。

HashSet 和 HashMap 等集合类使用了 hashCode() 方法来计算对象应该存储的位置，因此要将对象添加到这些集合类中，需要让对应的类实现 hashCode() 方法。

#### toString()



#### clone()

https://www.cnblogs.com/shoshana-kong/p/10820420.html



## 访问权限

Java 中有三个访问权限修饰符：private、protected 以及 public，如果不加访问修饰符，表示包级可见。

可以对类或类中的成员（字段和方法）加上访问修饰符。

- 类可见表示其它类可以用这个类创建实例对象。
- 成员可见表示其它类可以用这个类的实例对象访问到该成员；

protected 用于修饰成员，表示在继承体系中成员对于子类可见，但是这个访问修饰符对于类没有意义。

设计良好的模块会隐藏所有的实现细节，把它的 API 与它的实现清晰地隔离开来。模块之间只通过它们的 API 进行通信，一个模块不需要知道其他模块的内部工作情况，这个概念被称为信息隐藏或封装。因此访问权限应当尽可能地使每个类或者成员不被外界访问。

如果子类的方法重写了父类的方法，那么子类中该方法的访问级别不允许低于父类的访问级别。这是为了确保可以使用父类实例的地方都可以使用子类实例去代替，也就是确保满足里氏替换原则。



## 抽象类和接口

#### 抽象类

抽象类和抽象方法都使用 abstract 关键字进行声明。如果一个类中包含抽象方法，那么这个类必须声明为抽象类。

抽象类和普通类最大的区别是，抽象类不能被实例化，只能被继承。

#### 接口

接口是抽象类的延伸，在 Java 8 之前，它可以看成是一个完全抽象的类，也就是说它不能有任何的方法实现。

从 Java 8 开始，接口也可以拥有默认的方法实现，这是因为不支持默认方法的接口的维护成本太高了。在 Java 8 之前，如果一个接口想要添加新的方法，那么要修改所有实现了该接口的类，让它们都实现新增的方法。

接口的成员（字段 + 方法）默认都是 public 的，并且不允许定义为 private 或者 protected。

接口的字段默认都是 static 和 final 的。

#### 比较

- 从设计层面上看，抽象类提供了一种 IS-A 关系，需要满足里式替换原则，即子类对象必须能够替换掉所有父类对象。而接口更像是一种 LIKE-A 关系，它只是提供一种方法实现契约，并不要求接口和实现接口的类具有 IS-A 关系。
- 从使用上来看，一个类可以实现多个接口，但是不能继承多个抽象类。
- 接口的字段只能是 static 和 final 类型的，而抽象类的字段没有这种限制。
- 接口的成员只能是 public 的，而抽象类的成员可以有多种访问权限。

#### 使用选择

使用接口：

- 需要让不相关的类都实现一个方法，例如不相关的类都可以实现 Compareable 接口中的 compareTo() 方法；
- 需要使用多重继承。

使用抽象类：

- 需要在几个相关的类中共享代码。
- 需要能控制继承来的成员的访问权限，而不是都为 public。
- 需要继承非静态和非常量字段。

在很多情况下，接口优先于抽象类。因为接口没有抽象类严格的类层次结构要求，可以灵活地为一个类添加行为。并且从 Java 8 开始，接口也可以有默认的方法实现，使得修改接口的成本也变的很低。



## super

- 访问父类的构造函数：可以使用 super() 函数访问父类的构造函数，从而委托父类完成一些初始化的工作。应该注意到，子类一定会调用父类的构造函数来完成初始化工作，一般是调用父类的默认构造函数，如果子类需要调用父类其它构造函数，那么就可以使用 super() 函数。
- 访问父类的成员：如果子类重写了父类的某个方法，可以通过使用 super 关键字来引用父类的方法实现。



## 反射

在运行过程中获得类、对象、方法的所有信息

#### API

https://www.cnblogs.com/sun1993/p/7828535.html

#### 优缺点

优点：反射可以动态创建对象和编译，最大限度发挥了java的灵活性。
缺点：对性能有影响。反射基本上是一种解释操作，告诉JVM我们要做什么并且满足我们的需求，这类操作总是慢于直接执行java代码。



## 异常

![Java-exception.png](http://assets.tianmaying.com/md-image/c887bccaa4b144622c82685097908f3d.png)

Error：是程序无法控制的，通常会导致JVM终止线程

Exception：通常是程序可以处理的；

检查异常需要使用try-catch语句捕获，或者用throws抛出；

不受检查异常(RuntimeException及其子类和Error)是编译器不要求强制处理的异常

#### 异常处理机制

抛出异常：当一个方法出现错误引发异常时，方法创建异常对象并交付运行时系统，异常对象中包含了异常类型和异常出现时的程序状态等异常信息。运行时系统负责寻找处置异常的代码并执行。

捕捉异常：在方法抛出异常之后，运行时系统将转为寻找合适的异常处理器（exception handler）。潜在的异常处理器是异常发生时依次存留在调用栈中的方法的集合。当异常处理器所能处理的异常类型与方法抛出的异常类型相符时，即为合适的异常处理器。运行时系统从发生异常的方法开始，依次回查调用栈中的方法，直至找到含有合适异常处理器的方法并执行。当运行时系统遍历调用栈而未找到合适的异常处理器，则运行时系统终止。同时，意味着Java程序的终止。

（发生异常->创建异常对象->运行时系统寻找合适的异常处理器->寻找并执行合适的异常处理器的方法，如果没找到：程序终止）



(String), 17(Long), https://picsum.photos/id/1004/100/100(String), 文章记录了我在Java复习过程中对网上资料的总结(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-08-02 16:11:02.604(Timestamp), 26(String), 1596213997903(Long)
2020-08-02 16:11:02.984 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.updateBlog      : <==    Updates: 1
2020-08-02 16:11:03.081 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id 
2020-08-02 16:11:03.081 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2020-08-02 16:11:03.082 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2020-08-02 16:11:03.083 DEBUG 2316 --- [http-nio-8080-exec-1] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: select b.id bid, b.title, b.update_time, b.recommend, b.type_id, t.id tid, t.name from blog.blog b left join blog.type t on b.type_id = t.id order by b.update_time desc LIMIT ? 
2020-08-02 16:11:03.083 DEBUG 2316 --- [http-nio-8080-exec-1] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2020-08-02 16:11:03.085 DEBUG 2316 --- [http-nio-8080-exec-1] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 3
2020-08-02 16:11:03.086 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:11:03.086 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:11:03.087 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:18:12.106  INFO 2316 --- [Thread-177] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-02 16:18:12.108  INFO 2316 --- [Thread-177] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2020-08-02 16:18:12.122  INFO 2316 --- [Thread-177] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2020-08-02 16:18:12.392  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Starting BlogApplication on LAPTOP-389VIUI1 with PID 2316 (E:\java workspace\blog\target\classes started by 王金伟 in E:\java workspace\blog)
2020-08-02 16:18:12.392 DEBUG 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Running with Spring Boot v2.3.0.RELEASE, Spring v5.2.6.RELEASE
2020-08-02 16:18:12.392  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : No active profile set, falling back to default profiles: default
2020-08-02 16:18:12.761  INFO 2316 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-08-02 16:18:12.762  INFO 2316 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-08-02 16:18:12.763  INFO 2316 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-08-02 16:18:12.799  INFO 2316 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-08-02 16:18:12.800  INFO 2316 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 405 ms
2020-08-02 16:18:13.110  INFO 2316 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-08-02 16:18:13.158  INFO 2316 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-08-02 16:18:13.558  INFO 2316 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-08-02 16:18:13.575  INFO 2316 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-08-02 16:18:13.586  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Started BlogApplication in 1.22 seconds (JVM running for 1443.531)
2020-08-02 16:18:13.588  INFO 2316 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-08-02 16:18:16.334  INFO 2316 --- [http-nio-8080-exec-10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-02 16:18:16.336  INFO 2316 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-08-02 16:18:16.355  INFO 2316 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed initialization in 19 ms
2020-08-02 16:18:17.265  INFO 2316 --- [http-nio-8080-exec-4] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2020-08-02 16:18:17.284  INFO 2316 --- [http-nio-8080-exec-4] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2020-08-02 16:18:17.284 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.d.U.findByUsernameAndPassword      : ==>  Preparing: select * from blog.user where username = ? and password = ?; 
2020-08-02 16:18:17.285 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.d.U.findByUsernameAndPassword      : ==> Parameters: wjw(String), e10adc3949ba59abbe56e057f20f883e(String)
2020-08-02 16:18:17.290 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.d.U.findByUsernameAndPassword      : <==      Total: 1
2020-08-02 16:18:18.431 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id 
2020-08-02 16:18:18.431 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2020-08-02 16:18:18.433 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2020-08-02 16:18:18.433 DEBUG 2316 --- [http-nio-8080-exec-9] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: select b.id bid, b.title, b.update_time, b.recommend, b.type_id, b.publish, t.id tid, t.name from blog.blog b left join blog.type t on b.type_id = t.id order by b.update_time desc LIMIT ? 
2020-08-02 16:18:18.434 DEBUG 2316 --- [http-nio-8080-exec-9] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2020-08-02 16:18:18.438 DEBUG 2316 --- [http-nio-8080-exec-9] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 3
2020-08-02 16:18:18.443 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:18:18.443 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:18:18.444 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:18:39.781 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id 
2020-08-02 16:18:39.781 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2020-08-02 16:18:39.782 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2020-08-02 16:18:39.783 DEBUG 2316 --- [http-nio-8080-exec-6] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: select b.id bid, b.title, b.update_time, b.recommend, b.type_id, b.publish, t.id tid, t.name from blog.blog b left join blog.type t on b.type_id = t.id order by b.update_time desc LIMIT ? 
2020-08-02 16:18:39.784 DEBUG 2316 --- [http-nio-8080-exec-6] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2020-08-02 16:18:39.786 DEBUG 2316 --- [http-nio-8080-exec-6] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 3
2020-08-02 16:18:39.787 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:18:39.787 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:18:39.791 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:19:02.728 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id 
2020-08-02 16:19:02.728 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2020-08-02 16:19:02.730 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2020-08-02 16:19:02.731 DEBUG 2316 --- [http-nio-8080-exec-1] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: select b.id bid, b.title, b.update_time, b.recommend, b.type_id, b.publish, t.id tid, t.name from blog.blog b left join blog.type t on b.type_id = t.id order by b.update_time desc LIMIT ? 
2020-08-02 16:19:02.732 DEBUG 2316 --- [http-nio-8080-exec-1] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2020-08-02 16:19:02.734 DEBUG 2316 --- [http-nio-8080-exec-1] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 3
2020-08-02 16:19:02.736 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:19:02.736 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:19:02.737 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:23:32.702  INFO 2316 --- [Thread-184] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-02 16:23:32.703  INFO 2316 --- [Thread-184] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown initiated...
2020-08-02 16:23:32.711  INFO 2316 --- [Thread-184] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown completed.
2020-08-02 16:23:32.905  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Starting BlogApplication on LAPTOP-389VIUI1 with PID 2316 (E:\java workspace\blog\target\classes started by 王金伟 in E:\java workspace\blog)
2020-08-02 16:23:32.905 DEBUG 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Running with Spring Boot v2.3.0.RELEASE, Spring v5.2.6.RELEASE
2020-08-02 16:23:32.907  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : No active profile set, falling back to default profiles: default
2020-08-02 16:23:33.309  INFO 2316 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-08-02 16:23:33.309  INFO 2316 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-08-02 16:23:33.309  INFO 2316 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-08-02 16:23:33.347  INFO 2316 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-08-02 16:23:33.347  INFO 2316 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 437 ms
2020-08-02 16:23:33.614  INFO 2316 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-08-02 16:23:33.654  INFO 2316 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-08-02 16:23:33.934  INFO 2316 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-08-02 16:23:33.957  INFO 2316 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-08-02 16:23:33.961  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Started BlogApplication in 1.088 seconds (JVM running for 1763.906)
2020-08-02 16:23:33.963  INFO 2316 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-08-02 16:23:36.206  INFO 2316 --- [http-nio-8080-exec-10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-02 16:23:36.206  INFO 2316 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-08-02 16:23:36.219  INFO 2316 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed initialization in 12 ms
2020-08-02 16:23:37.148  INFO 2316 --- [http-nio-8080-exec-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Starting...
2020-08-02 16:23:37.164  INFO 2316 --- [http-nio-8080-exec-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Start completed.
2020-08-02 16:23:37.164 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.d.U.findByUsernameAndPassword      : ==>  Preparing: select * from blog.user where username = ? and password = ?; 
2020-08-02 16:23:37.164 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.d.U.findByUsernameAndPassword      : ==> Parameters: wjw(String), e10adc3949ba59abbe56e057f20f883e(String)
2020-08-02 16:23:37.167 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.d.U.findByUsernameAndPassword      : <==      Total: 1
2020-08-02 16:23:38.271 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id 
2020-08-02 16:23:38.272 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2020-08-02 16:23:38.274 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2020-08-02 16:23:38.275 DEBUG 2316 --- [http-nio-8080-exec-1] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: select b.id bid, b.title, b.update_time, b.recommend, b.type_id, b.publish, t.id tid, t.name from blog.blog b left join blog.type t on b.type_id = t.id order by b.update_time desc LIMIT ? 
2020-08-02 16:23:38.276 DEBUG 2316 --- [http-nio-8080-exec-1] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2020-08-02 16:23:38.278 DEBUG 2316 --- [http-nio-8080-exec-1] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 3
2020-08-02 16:23:38.282 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:23:38.282 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:23:38.284 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:23:52.759 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id WHERE b.recommend = ? AND b.publish = ? 
2020-08-02 16:23:52.760 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : ==> Parameters: true(Boolean), true(Boolean)
2020-08-02 16:23:52.860 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : <==      Total: 1
2020-08-02 16:23:52.861 DEBUG 2316 --- [http-nio-8080-exec-7] c.wjw.blog.dao.BlogDao.getBlogBySearch   : ==>  Preparing: select b.id bid, b.title, b.update_time, b.recommend, b.type_id, b.publish, t.id tid, t.name from blog.blog b left join blog.type t on b.type_id = t.id WHERE b.recommend = ? and b.publish = ? order by b.update_time desc LIMIT ? 
2020-08-02 16:23:52.861 DEBUG 2316 --- [http-nio-8080-exec-7] c.wjw.blog.dao.BlogDao.getBlogBySearch   : ==> Parameters: true(Boolean), true(Boolean), 4(Integer)
2020-08-02 16:23:52.863 DEBUG 2316 --- [http-nio-8080-exec-7] c.wjw.blog.dao.BlogDao.getBlogBySearch   : <==      Total: 2
2020-08-02 16:23:52.864 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:23:52.864 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:23:52.866 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:24:29.304 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id WHERE b.recommend = ? AND b.publish = ? 
2020-08-02 16:24:29.304 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : ==> Parameters: true(Boolean), true(Boolean)
2020-08-02 16:24:29.306 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : <==      Total: 1
2020-08-02 16:24:29.306 DEBUG 2316 --- [http-nio-8080-exec-3] c.wjw.blog.dao.BlogDao.getBlogBySearch   : ==>  Preparing: select b.id bid, b.title, b.update_time, b.recommend, b.type_id, b.publish, t.id tid, t.name from blog.blog b left join blog.type t on b.type_id = t.id WHERE b.recommend = ? and b.publish = ? order by b.update_time desc LIMIT ? 
2020-08-02 16:24:29.307 DEBUG 2316 --- [http-nio-8080-exec-3] c.wjw.blog.dao.BlogDao.getBlogBySearch   : ==> Parameters: true(Boolean), true(Boolean), 4(Integer)
2020-08-02 16:24:29.308 DEBUG 2316 --- [http-nio-8080-exec-3] c.wjw.blog.dao.BlogDao.getBlogBySearch   : <==      Total: 2
2020-08-02 16:24:29.309 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:24:29.309 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:24:29.310 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:24:42.452 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id WHERE b.recommend = ? AND b.publish = ? AND b.title = ? 
2020-08-02 16:24:42.452 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : ==> Parameters: false(Boolean), false(Boolean), Java复习记录(String)
2020-08-02 16:24:42.454 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : <==      Total: 1
2020-08-02 16:24:42.456 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:24:42.456 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:24:42.457 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:25:26.145 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id WHERE b.recommend = ? AND b.publish = ? AND b.title = ? 
2020-08-02 16:25:26.145 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : ==> Parameters: false(Boolean), false(Boolean), Java复习记录(String)
2020-08-02 16:25:26.148 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : <==      Total: 1
2020-08-02 16:25:26.149 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:25:26.149 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:25:26.151 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:25:42.297 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id WHERE b.recommend = ? AND b.publish = ? AND b.title = ? 
2020-08-02 16:25:42.299 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : ==> Parameters: false(Boolean), false(Boolean), Java复习记录(String)
2020-08-02 16:25:42.300 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : <==      Total: 1
2020-08-02 16:25:42.301 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:25:42.301 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:25:42.303 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:25:57.507 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id WHERE b.recommend = ? AND b.publish = ? 
2020-08-02 16:25:57.508 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : ==> Parameters: false(Boolean), false(Boolean)
2020-08-02 16:25:57.509 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : <==      Total: 1
2020-08-02 16:25:57.509 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:25:57.509 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:25:57.511 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:30:24.334 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id WHERE b.recommend = ? AND b.publish = ? AND b.type_id = ? 
2020-08-02 16:30:24.337 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : ==> Parameters: false(Boolean), false(Boolean), 17(Long)
2020-08-02 16:30:24.695 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : <==      Total: 1
2020-08-02 16:30:24.696 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:30:24.696 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:30:24.698 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:30:30.162 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id WHERE b.recommend = ? AND b.publish = ? AND b.type_id = ? 
2020-08-02 16:30:30.164 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : ==> Parameters: true(Boolean), true(Boolean), 17(Long)
2020-08-02 16:30:30.166 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getBlogBySearch_COUNT  : <==      Total: 1
2020-08-02 16:30:30.168 DEBUG 2316 --- [http-nio-8080-exec-7] c.wjw.blog.dao.BlogDao.getBlogBySearch   : ==>  Preparing: select b.id bid, b.title, b.update_time, b.recommend, b.type_id, b.publish, t.id tid, t.name from blog.blog b left join blog.type t on b.type_id = t.id WHERE b.recommend = ? and b.publish = ? and b.type_id = ? order by b.update_time desc LIMIT ? 
2020-08-02 16:30:30.168 DEBUG 2316 --- [http-nio-8080-exec-7] c.wjw.blog.dao.BlogDao.getBlogBySearch   : ==> Parameters: true(Boolean), true(Boolean), 17(Long), 4(Integer)
2020-08-02 16:30:30.170 DEBUG 2316 --- [http-nio-8080-exec-7] c.wjw.blog.dao.BlogDao.getBlogBySearch   : <==      Total: 1
2020-08-02 16:30:30.171 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:30:30.171 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:30:30.174 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:31:25.016 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id 
2020-08-02 16:31:25.018 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2020-08-02 16:31:25.019 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2020-08-02 16:31:25.020 DEBUG 2316 --- [http-nio-8080-exec-3] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: select b.id bid, b.title, b.update_time, b.recommend, b.type_id, b.publish, t.id tid, t.name from blog.blog b left join blog.type t on b.type_id = t.id order by b.update_time desc LIMIT ? 
2020-08-02 16:31:25.020 DEBUG 2316 --- [http-nio-8080-exec-3] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2020-08-02 16:31:25.022 DEBUG 2316 --- [http-nio-8080-exec-3] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 3
2020-08-02 16:31:25.023 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:31:25.023 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:31:25.025 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:31:30.242 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getBlogById     : ==>  Preparing: select b.id, b.publish, b.flag, b.title, b.content, b.type_id, b.first_picture, b.description, b.recommend, b.share_statement, b.appreciation, b.comment, b.tag_ids from blog.blog b where b.id = ? 
2020-08-02 16:31:30.243 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getBlogById     : ==> Parameters: 1596213997903(Long)
2020-08-02 16:31:30.246 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getBlogById     : <==      Total: 1
2020-08-02 16:31:30.247 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:31:30.248 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:31:30.249 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:31:30.256 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TagDao.getAdminTag      : ==>  Preparing: select * from blog.tag order by name 
2020-08-02 16:31:30.256 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TagDao.getAdminTag      : ==> Parameters: 
2020-08-02 16:31:30.257 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TagDao.getAdminTag      : <==      Total: 5
2020-08-02 16:36:07.870 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.type 
2020-08-02 16:36:07.871 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==> Parameters: 
2020-08-02 16:36:07.874 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.blog.dao.TypeDao.getAdminType_COUNT  : <==      Total: 1
2020-08-02 16:36:07.874 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name LIMIT ? 
2020-08-02 16:36:07.875 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 5(Integer)
2020-08-02 16:36:07.876 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 5
2020-08-02 16:36:08.801 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id 
2020-08-02 16:36:08.801 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2020-08-02 16:36:08.803 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2020-08-02 16:36:08.805 DEBUG 2316 --- [http-nio-8080-exec-6] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: select b.id bid, b.title, b.update_time, b.recommend, b.type_id, b.publish, t.id tid, t.name from blog.blog b left join blog.type t on b.type_id = t.id order by b.update_time desc LIMIT ? 
2020-08-02 16:36:08.805 DEBUG 2316 --- [http-nio-8080-exec-6] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2020-08-02 16:36:08.807 DEBUG 2316 --- [http-nio-8080-exec-6] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 3
2020-08-02 16:36:08.807 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:36:08.808 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:36:08.808 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:36:10.749 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.BlogDao.deleteBlog      : ==>  Preparing: delete from blog.blog where id = ? 
2020-08-02 16:36:10.749 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.BlogDao.deleteBlog      : ==> Parameters: 1596270221107(Long)
2020-08-02 16:36:10.855 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.BlogDao.deleteBlog      : <==    Updates: 1
2020-08-02 16:36:10.855 DEBUG 2316 --- [http-nio-8080-exec-2] c.wjw.blog.dao.BlogDao.deleteBlogAndTag  : ==>  Preparing: delete from blog.blog_tag where blog_id = ? 
2020-08-02 16:36:10.856 DEBUG 2316 --- [http-nio-8080-exec-2] c.wjw.blog.dao.BlogDao.deleteBlogAndTag  : ==> Parameters: 1596270221107(Long)
2020-08-02 16:36:10.897 DEBUG 2316 --- [http-nio-8080-exec-2] c.wjw.blog.dao.BlogDao.deleteBlogAndTag  : <==    Updates: 2
2020-08-02 16:36:10.987 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id 
2020-08-02 16:36:10.988 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2020-08-02 16:36:10.989 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2020-08-02 16:36:10.990 DEBUG 2316 --- [http-nio-8080-exec-10] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: select b.id bid, b.title, b.update_time, b.recommend, b.type_id, b.publish, t.id tid, t.name from blog.blog b left join blog.type t on b.type_id = t.id order by b.update_time desc LIMIT ? 
2020-08-02 16:36:10.990 DEBUG 2316 --- [http-nio-8080-exec-10] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2020-08-02 16:36:10.996 DEBUG 2316 --- [http-nio-8080-exec-10] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 2
2020-08-02 16:36:10.996 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:36:10.997 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:36:10.998 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:36:13.474 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.BlogDao.deleteBlog      : ==>  Preparing: delete from blog.blog where id = ? 
2020-08-02 16:36:13.475 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.BlogDao.deleteBlog      : ==> Parameters: 1596269035352(Long)
2020-08-02 16:36:13.476 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.BlogDao.deleteBlog      : <==    Updates: 1
2020-08-02 16:36:13.476 DEBUG 2316 --- [http-nio-8080-exec-5] c.wjw.blog.dao.BlogDao.deleteBlogAndTag  : ==>  Preparing: delete from blog.blog_tag where blog_id = ? 
2020-08-02 16:36:13.476 DEBUG 2316 --- [http-nio-8080-exec-5] c.wjw.blog.dao.BlogDao.deleteBlogAndTag  : ==> Parameters: 1596269035352(Long)
2020-08-02 16:36:13.477 DEBUG 2316 --- [http-nio-8080-exec-5] c.wjw.blog.dao.BlogDao.deleteBlogAndTag  : <==    Updates: 5
2020-08-02 16:36:13.643 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id 
2020-08-02 16:36:13.643 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2020-08-02 16:36:13.644 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2020-08-02 16:36:13.644 DEBUG 2316 --- [http-nio-8080-exec-6] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: select b.id bid, b.title, b.update_time, b.recommend, b.type_id, b.publish, t.id tid, t.name from blog.blog b left join blog.type t on b.type_id = t.id order by b.update_time desc LIMIT ? 
2020-08-02 16:36:13.644 DEBUG 2316 --- [http-nio-8080-exec-6] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2020-08-02 16:36:13.645 DEBUG 2316 --- [http-nio-8080-exec-6] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 1
2020-08-02 16:36:13.646 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:36:13.646 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:36:13.647 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:36:16.610 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.BlogDao.getBlogById     : ==>  Preparing: select b.id, b.publish, b.flag, b.title, b.content, b.type_id, b.first_picture, b.description, b.recommend, b.share_statement, b.appreciation, b.comment, b.tag_ids from blog.blog b where b.id = ? 
2020-08-02 16:36:16.610 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.BlogDao.getBlogById     : ==> Parameters: 1596213997903(Long)
2020-08-02 16:36:16.613 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.BlogDao.getBlogById     : <==      Total: 1
2020-08-02 16:36:16.614 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:36:16.615 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:36:16.616 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:36:16.617 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TagDao.getAdminTag      : ==>  Preparing: select * from blog.tag order by name 
2020-08-02 16:36:16.618 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TagDao.getAdminTag      : ==> Parameters: 
2020-08-02 16:36:16.619 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TagDao.getAdminTag      : <==      Total: 5
2020-08-02 16:36:39.952 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.BlogDao.updateBlog      : ==>  Preparing: update blog.blog set publish = ?, flag = ?, title = ?, content = ?, type_id = ?, first_picture = ?, description = ?, recommend = ?, share_statement = ?, appreciation = ?, comment = ?, update_time = ?, tag_ids = ? where id = ? 
2020-08-02 16:36:39.954 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.BlogDao.updateBlog      : ==> Parameters: true(Boolean), 原创(String), Java复习记录(String), [TOC]

## 基本数据类型

![img](https://images2017.cnblogs.com/blog/1170065/201801/1170065-20180104154110299-576214776.png)

整形常量默认为int，浮点型常量默认为double

+两边如果有String类型就是连接符，否则是运算符



## 包装类

基本类型都有对应的包装类型，基本类型与其对应的包装类型之间的赋值使用自动装箱与拆箱完成。

```java
Integer x = 2;     // 装箱 调用了 Integer.valueOf(2)
int y = x;         // 拆箱 调用了 X.intValue()
```

#### 用途

- 集合不允许存放基本数据类型，故常用包装类
- 包含了每种基本类型的相关属性，如最大值，最小值，所占位数等
- 作为基本数据类型对应的类类型，提供了一系列实用的对象操作，如类型转换，进制转换等

#### 和基本类型的对比

- 通过引用指向实例，具体的实例保存在堆里；基本类型直接保存值在栈里
- 初值为null；基本类型的初值视具体的类型而定

#### 注意

- 无论如何，Integer与new Integer不会相等。不会经历拆箱过程，new出来的对象存放在堆中，而非new的Integer常量则在常量池（在方法区），他们的内存地址不一样，所以为false。

- 两个都是非new出来的Integer，如果数在-128到127之间，则是true,否则为false。

  ```java
  Integer x = new Integer(123);
  Integer y = new Integer(123);
  System.out.println(x == y);    // false
  Integer z = Integer.valueOf(123);
  Integer k = Integer.valueOf(123);
  System.out.println(z == k);   // true
  ```

- 两个都是new出来的,都为false。还是内存地址不一样。

- int和Integer(无论new否)比，都为true，因为会把Integer自动拆箱为int再去比。

#### 基本类型对应的缓存池(缓存池中的对象已经创建好存在常量池中)

- boolean values true and false
- all byte values
- short values between -128 and 127
- int values between -128 and 127
- char in the range \u0000 to \u007F

在使用这些基本类型对应的包装类型时，如果该数值范围在缓存池范围内，就可以直接使用缓存池中的对象。



## String

String 类被 final修饰，因此它不可被继承。(Integer 等包装类也不能被继承）

String的成员变量被final和private修饰，所以初始化后不可更改引用，外界也不能更改

#### 不可变的好处

**1. 可以缓存 hash 值**

因为 String 的 hash 值经常被使用，例如 String 用做 HashMap 的 key。不可变的特性可以使得 hash 值也不可变，因此只需要进行一次计算。

**2. String Pool 的需要**

如果一个 String 对象已经被创建过了，那么就会从 String Pool 中取得引用。只有 String 是不可变的，才可能使用 String Pool。

[![img](https://camo.githubusercontent.com/152a310f7698bb23ae201081c5c497b5c1d396d9/68747470733a2f2f63732d6e6f7465732d313235363130393739362e636f732e61702d6775616e677a686f752e6d7971636c6f75642e636f6d2f696d6167652d32303139313231303030343133323839342e706e67)](https://camo.githubusercontent.com/152a310f7698bb23ae201081c5c497b5c1d396d9/68747470733a2f2f63732d6e6f7465732d313235363130393739362e636f732e61702d6775616e677a686f752e6d7971636c6f75642e636f6d2f696d6167652d32303139313231303030343133323839342e706e67)



**3. 安全性**

String 经常作为参数，String 不可变性可以保证参数不可变。例如在作为网络连接参数的情况下，如果 String 是可变的，那么在网络连接过程中，String 被改变，改变 String 的那一方以为现在连接的是其它主机，而实际情况却不一定是。

**4. 线程安全**

String 不可变性天生具备线程安全，可以在多个线程中安全地使用。



## String，StringBuffer，StringBuilder

**1. 可变性**

- String 不可变
- StringBuffer 和 StringBuilder 可变

**2. 线程安全**

- String 不可变，因此是线程安全的
- StringBuilder 不是线程安全的
- StringBuffer 是线程安全的，内部使用 synchronized 进行同步

[StackOverflow : String, StringBuffer, and StringBuilder](https://stackoverflow.com/questions/2971315/string-stringbuffer-and-stringbuilder)



## String Pool

字符串常量池（String Pool）保存着所有字符串字面量（literal strings），这些字面量在编译时期就确定。不仅如此，还可以使用 String 的 intern() 方法在运行过程将字符串添加到 String Pool 中。

当一个字符串调用 intern() 方法时，如果 String Pool 中已经存在一个字符串和该字符串值相等（使用 equals() 方法进行确定），那么就会返回 String Pool 中字符串的引用；否则，就会在 String Pool 中添加一个新的字符串，并返回这个新字符串的引用。

下面示例中，s1 和 s2 采用 new String() 的方式新建了两个不同字符串，而 s3 和 s4 是通过 s1.intern() 方法取得同一个字符串引用。intern() 首先把 s1 引用的字符串放到 String Pool 中，然后返回这个字符串引用。因此 s3 和 s4 引用的是同一个字符串。

```
String s1 = new String("aaa");
String s2 = new String("aaa");
System.out.println(s1 == s2);           // false
String s3 = s1.intern();
String s4 = s1.intern();
System.out.println(s3 == s4);           // true
```

如果是采用 "bbb" 这种字面量的形式创建字符串，会自动地将字符串放入 String Pool 中。

```
String s5 = "bbb";
String s6 = "bbb";
System.out.println(s5 == s6);  // true
```

#### new String("abc")

使用这种方式一共会创建两个字符串对象（前提是 String Pool 中还没有 "abc" 字符串对象）。

- "abc" 属于字符串字面量，因此编译时期会在 String Pool 中创建一个字符串对象，指向这个 "abc" 字符串字面量；
- 而使用 new 的方式会在堆中创建一个字符串对象。

#### String创建对象问题

https://www.cnblogs.com/chenghuanhuaning/articles/11255642.html



## 参数传递

Java 的参数是以值传递的形式传入方法中，而不是引用传递。



## float 和 double

Java 不能隐式执行向下转型，因为这会使得精度降低。

1.1 字面量属于 double 类型，不能直接将 1.1 直接赋值给 float 变量，因为这是向下转型。

```
// float f = 1.1;
```

1.1f 字面量才是 float 类型。

```
float f = 1.1f;
```



## 隐式类型转换

因为字面量 1 是 int 类型，它比 short 类型精度要高，因此不能隐式地将 int 类型向下转型为 short 类型。

```
short s1 = 1;
// s1 = s1 + 1;
```

但是使用 += 或者 ++ 运算符会执行隐式类型转换。

```
s1 += 1;
s1++;
```

上面的语句相当于将 s1 + 1 的计算结果进行了向下转型：

```
s1 = (short) (s1 + 1);
```



## final

#### 修饰类

表明这个类不能被继承，final类中的所有成员方法都会被隐式地指定为final方法

#### 修饰方法

父类的final方法是不能被子类所覆盖的，即此方法不能被重写

但是如果访问权限为private，那么这个方法不能直接继承此方法，此时可以在子类中定义同名的方法名和参数（类的private方法会被隐式地指定为final方法）

#### 修饰变量

**final成员变量表示常量，只能被赋值一次，赋值后值不再改变。**

当final修饰一个**基本数据类型**时，表示该基本数据类型的值一旦**在初始化后便不能发生变化**；如果final修饰一个**引用类型**时，则在对其**初始化之后便不能再让其指向其他对象**了，但**该引用所指向的对象的内容是可以发生变化的**。本质上是一回事，因为引用的值是一个地址，final要求值，即地址的值不发生变化。

final修饰一个**成员变量**（属性），**必须在定义时或者构造器中进行初始化赋值**，**而且final变量一旦被初始化赋值之后，就不能再被赋值了**。

当函数的参数类型声明为final时，说明该参数是只读型的。即你可以读取使用该参数，但是无法改变该参数的值。

#### final变量和普通变量的区别

https://blog.csdn.net/hc1428090104/article/details/99218541



## static

**1. 静态变量**

- 静态变量：又称为类变量，也就是说这个变量属于类的，类所有的实例都共享静态变量，可以直接通过类名来访问它。静态变量在内存中只存在一份。
- 实例变量：每创建一个实例就会产生一个实例变量，它与该实例同生共死。

**2. 静态方法**

静态方法在类加载的时候就存在了，它不依赖于任何实例。所以静态方法必须有实现，也就是说它不能是抽象方法。

只能访问所属类的静态字段和静态方法，方法中不能有 this 和 super 关键字，因为这两个关键字与具体对象关联。

**3. 静态语句块**

静态语句块在类初始化时运行一次。

```
public class A {
    static {
        System.out.println("123");
    }

    public static void main(String[] args) {
        A a1 = new A();
        A a2 = new A();
    }
}
```

**4. 静态内部类**

非静态内部类依赖于外部类的实例，也就是说需要先创建外部类实例，才能用这个实例去创建非静态内部类。而静态内部类不需要。

```
public class OuterClass {

    class InnerClass {
    }

    static class StaticInnerClass {
    }

    public static void main(String[] args) {
        // InnerClass innerClass = new InnerClass(); // 'OuterClass.this' cannot be referenced from a static context
        OuterClass outerClass = new OuterClass();
        InnerClass innerClass = outerClass.new InnerClass();
        StaticInnerClass staticInnerClass = new StaticInnerClass();
    }
}
```

静态内部类不能访问外部类的非静态的变量和方法。

**5. 初始化顺序**

静态变量和静态语句块优先于实例变量和普通语句块，静态变量和静态语句块的初始化顺序取决于它们在代码中的顺序。

```
public static String staticField = "静态变量";
static {
    System.out.println("静态语句块");
}
public String field = "实例变量";
{
    System.out.println("普通语句块");
}
```

最后才是构造函数的初始化。

```
public InitialOrderTest() {
    System.out.println("构造函数");
}
```

存在继承的情况下，初始化顺序为：

- 父类（静态变量、静态语句块）
- 子类（静态变量、静态语句块）
- 父类（实例变量、普通语句块）
- 父类（构造函数）
- 子类（实例变量、普通语句块）
- 子类（构造函数）



## Object 通用方法

#### equals()

- 对于基本类型，== 判断两个值是否相等，基本类型没有 equals() 方法。
- 对于引用类型，== 判断两个变量是否引用同一个对象，而 equals() 判断引用的对象是否等价。

#### hashCode()

hashCode() 返回哈希值，而 equals() 是用来判断两个对象是否等价。等价的两个对象散列值一定相同，但是散列值相同的两个对象不一定等价，这是因为计算哈希值具有随机性，两个值不同的对象可能计算出相同的哈希值。

在覆盖 equals() 方法时应当总是覆盖 hashCode() 方法，保证等价的两个对象哈希值也相等。

HashSet 和 HashMap 等集合类使用了 hashCode() 方法来计算对象应该存储的位置，因此要将对象添加到这些集合类中，需要让对应的类实现 hashCode() 方法。

#### toString()



#### clone()

https://www.cnblogs.com/shoshana-kong/p/10820420.html



## 访问权限

Java 中有三个访问权限修饰符：private、protected 以及 public，如果不加访问修饰符，表示包级可见。

可以对类或类中的成员（字段和方法）加上访问修饰符。

- 类可见表示其它类可以用这个类创建实例对象。
- 成员可见表示其它类可以用这个类的实例对象访问到该成员；

protected 用于修饰成员，表示在继承体系中成员对于子类可见，但是这个访问修饰符对于类没有意义。

设计良好的模块会隐藏所有的实现细节，把它的 API 与它的实现清晰地隔离开来。模块之间只通过它们的 API 进行通信，一个模块不需要知道其他模块的内部工作情况，这个概念被称为信息隐藏或封装。因此访问权限应当尽可能地使每个类或者成员不被外界访问。

如果子类的方法重写了父类的方法，那么子类中该方法的访问级别不允许低于父类的访问级别。这是为了确保可以使用父类实例的地方都可以使用子类实例去代替，也就是确保满足里氏替换原则。



## 抽象类和接口

#### 抽象类

抽象类和抽象方法都使用 abstract 关键字进行声明。如果一个类中包含抽象方法，那么这个类必须声明为抽象类。

抽象类和普通类最大的区别是，抽象类不能被实例化，只能被继承。

#### 接口

接口是抽象类的延伸，在 Java 8 之前，它可以看成是一个完全抽象的类，也就是说它不能有任何的方法实现。

从 Java 8 开始，接口也可以拥有默认的方法实现，这是因为不支持默认方法的接口的维护成本太高了。在 Java 8 之前，如果一个接口想要添加新的方法，那么要修改所有实现了该接口的类，让它们都实现新增的方法。

接口的成员（字段 + 方法）默认都是 public 的，并且不允许定义为 private 或者 protected。

接口的字段默认都是 static 和 final 的。

#### 比较

- 从设计层面上看，抽象类提供了一种 IS-A 关系，需要满足里式替换原则，即子类对象必须能够替换掉所有父类对象。而接口更像是一种 LIKE-A 关系，它只是提供一种方法实现契约，并不要求接口和实现接口的类具有 IS-A 关系。
- 从使用上来看，一个类可以实现多个接口，但是不能继承多个抽象类。
- 接口的字段只能是 static 和 final 类型的，而抽象类的字段没有这种限制。
- 接口的成员只能是 public 的，而抽象类的成员可以有多种访问权限。

#### 使用选择

使用接口：

- 需要让不相关的类都实现一个方法，例如不相关的类都可以实现 Compareable 接口中的 compareTo() 方法；
- 需要使用多重继承。

使用抽象类：

- 需要在几个相关的类中共享代码。
- 需要能控制继承来的成员的访问权限，而不是都为 public。
- 需要继承非静态和非常量字段。

在很多情况下，接口优先于抽象类。因为接口没有抽象类严格的类层次结构要求，可以灵活地为一个类添加行为。并且从 Java 8 开始，接口也可以有默认的方法实现，使得修改接口的成本也变的很低。



## super

- 访问父类的构造函数：可以使用 super() 函数访问父类的构造函数，从而委托父类完成一些初始化的工作。应该注意到，子类一定会调用父类的构造函数来完成初始化工作，一般是调用父类的默认构造函数，如果子类需要调用父类其它构造函数，那么就可以使用 super() 函数。
- 访问父类的成员：如果子类重写了父类的某个方法，可以通过使用 super 关键字来引用父类的方法实现。



## 反射

在运行过程中获得类、对象、方法的所有信息

#### API

https://www.cnblogs.com/sun1993/p/7828535.html

#### 优缺点

优点：反射可以动态创建对象和编译，最大限度发挥了java的灵活性。
缺点：对性能有影响。反射基本上是一种解释操作，告诉JVM我们要做什么并且满足我们的需求，这类操作总是慢于直接执行java代码。



## 异常

![Java-exception.png](http://assets.tianmaying.com/md-image/c887bccaa4b144622c82685097908f3d.png)

Error：是程序无法控制的，通常会导致JVM终止线程

Exception：通常是程序可以处理的；

检查异常需要使用try-catch语句捕获，或者用throws抛出；

不受检查异常(RuntimeException及其子类和Error)是编译器不要求强制处理的异常

#### 异常处理机制

抛出异常：当一个方法出现错误引发异常时，方法创建异常对象并交付运行时系统，异常对象中包含了异常类型和异常出现时的程序状态等异常信息。运行时系统负责寻找处置异常的代码并执行。

捕捉异常：在方法抛出异常之后，运行时系统将转为寻找合适的异常处理器（exception handler）。潜在的异常处理器是异常发生时依次存留在调用栈中的方法的集合。当异常处理器所能处理的异常类型与方法抛出的异常类型相符时，即为合适的异常处理器。运行时系统从发生异常的方法开始，依次回查调用栈中的方法，直至找到含有合适异常处理器的方法并执行。当运行时系统遍历调用栈而未找到合适的异常处理器，则运行时系统终止。同时，意味着Java程序的终止。

（发生异常->创建异常对象->运行时系统寻找合适的异常处理器->寻找并执行合适的异常处理器的方法，如果没找到：程序终止）



(String), 17(Long), https://picsum.photos/id/1004/100/100(String), 文章记录了我在Java复习过程中对网上资料的总结(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-08-02 16:36:39.952(Timestamp), 26(String), 1596213997903(Long)
2020-08-02 16:36:39.962 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.BlogDao.updateBlog      : <==    Updates: 1
2020-08-02 16:36:40.122 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id 
2020-08-02 16:36:40.123 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2020-08-02 16:36:40.123 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2020-08-02 16:36:40.124 DEBUG 2316 --- [http-nio-8080-exec-1] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: select b.id bid, b.title, b.update_time, b.recommend, b.type_id, b.publish, t.id tid, t.name from blog.blog b left join blog.type t on b.type_id = t.id order by b.update_time desc LIMIT ? 
2020-08-02 16:36:40.124 DEBUG 2316 --- [http-nio-8080-exec-1] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2020-08-02 16:36:40.126 DEBUG 2316 --- [http-nio-8080-exec-1] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 1
2020-08-02 16:36:40.127 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:36:40.127 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:36:40.128 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 9
2020-08-02 16:36:44.347 DEBUG 2316 --- [http-nio-8080-exec-10] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.tag 
2020-08-02 16:36:44.347 DEBUG 2316 --- [http-nio-8080-exec-10] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==> Parameters: 
2020-08-02 16:36:44.349 DEBUG 2316 --- [http-nio-8080-exec-10] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : <==      Total: 1
2020-08-02 16:36:44.350 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TagDao.getAdminTag      : ==>  Preparing: select * from blog.tag order by name LIMIT ? 
2020-08-02 16:36:44.350 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TagDao.getAdminTag      : ==> Parameters: 5(Integer)
2020-08-02 16:36:44.351 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TagDao.getAdminTag      : <==      Total: 5
2020-08-02 16:36:45.862 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TagDao.getTagById       : ==>  Preparing: select * from blog.tag where id = ? 
2020-08-02 16:36:45.863 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TagDao.getTagById       : ==> Parameters: 26(Long)
2020-08-02 16:36:45.865 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TagDao.getTagById       : <==      Total: 1
2020-08-02 16:36:52.093 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TagDao.getTagByName     : ==>  Preparing: select * from blog.tag where name = ? 
2020-08-02 16:36:52.094 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TagDao.getTagByName     : ==> Parameters: Java(String)
2020-08-02 16:36:52.095 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TagDao.getTagByName     : <==      Total: 0
2020-08-02 16:36:52.096 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TagDao.updateTag        : ==>  Preparing: update blog.tag set name = ? where id = ? 
2020-08-02 16:36:52.096 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TagDao.updateTag        : ==> Parameters: Java(String), 26(Long)
2020-08-02 16:36:52.097 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TagDao.updateTag        : <==    Updates: 1
2020-08-02 16:36:52.284 DEBUG 2316 --- [http-nio-8080-exec-2] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.tag 
2020-08-02 16:36:52.285 DEBUG 2316 --- [http-nio-8080-exec-2] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==> Parameters: 
2020-08-02 16:36:52.286 DEBUG 2316 --- [http-nio-8080-exec-2] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : <==      Total: 1
2020-08-02 16:36:52.287 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TagDao.getAdminTag      : ==>  Preparing: select * from blog.tag order by name LIMIT ? 
2020-08-02 16:36:52.287 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TagDao.getAdminTag      : ==> Parameters: 5(Integer)
2020-08-02 16:36:52.288 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TagDao.getAdminTag      : <==      Total: 5
2020-08-02 16:36:57.155 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.TagDao.deleteTag        : ==>  Preparing: delete from blog.tag where id = ? 
2020-08-02 16:36:57.155 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.TagDao.deleteTag        : ==> Parameters: 25(Long)
2020-08-02 16:36:57.156 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.TagDao.deleteTag        : <==    Updates: 1
2020-08-02 16:36:57.300 DEBUG 2316 --- [http-nio-8080-exec-5] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.tag 
2020-08-02 16:36:57.300 DEBUG 2316 --- [http-nio-8080-exec-5] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==> Parameters: 
2020-08-02 16:36:57.302 DEBUG 2316 --- [http-nio-8080-exec-5] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : <==      Total: 1
2020-08-02 16:36:57.303 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TagDao.getAdminTag      : ==>  Preparing: select * from blog.tag order by name LIMIT ? 
2020-08-02 16:36:57.303 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TagDao.getAdminTag      : ==> Parameters: 5(Integer)
2020-08-02 16:36:57.304 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TagDao.getAdminTag      : <==      Total: 4
2020-08-02 16:36:59.437 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TagDao.deleteTag        : ==>  Preparing: delete from blog.tag where id = ? 
2020-08-02 16:36:59.437 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TagDao.deleteTag        : ==> Parameters: 27(Long)
2020-08-02 16:36:59.438 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TagDao.deleteTag        : <==    Updates: 1
2020-08-02 16:36:59.637 DEBUG 2316 --- [http-nio-8080-exec-2] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.tag 
2020-08-02 16:36:59.637 DEBUG 2316 --- [http-nio-8080-exec-2] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==> Parameters: 
2020-08-02 16:36:59.639 DEBUG 2316 --- [http-nio-8080-exec-2] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : <==      Total: 1
2020-08-02 16:36:59.640 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TagDao.getAdminTag      : ==>  Preparing: select * from blog.tag order by name LIMIT ? 
2020-08-02 16:36:59.640 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TagDao.getAdminTag      : ==> Parameters: 5(Integer)
2020-08-02 16:36:59.643 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TagDao.getAdminTag      : <==      Total: 3
2020-08-02 16:37:01.604 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.TagDao.deleteTag        : ==>  Preparing: delete from blog.tag where id = ? 
2020-08-02 16:37:01.604 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.TagDao.deleteTag        : ==> Parameters: 28(Long)
2020-08-02 16:37:01.605 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.TagDao.deleteTag        : <==    Updates: 1
2020-08-02 16:37:01.671 DEBUG 2316 --- [http-nio-8080-exec-5] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.tag 
2020-08-02 16:37:01.671 DEBUG 2316 --- [http-nio-8080-exec-5] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==> Parameters: 
2020-08-02 16:37:01.678 DEBUG 2316 --- [http-nio-8080-exec-5] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : <==      Total: 1
2020-08-02 16:37:01.679 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TagDao.getAdminTag      : ==>  Preparing: select * from blog.tag order by name LIMIT ? 
2020-08-02 16:37:01.679 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TagDao.getAdminTag      : ==> Parameters: 5(Integer)
2020-08-02 16:37:01.681 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TagDao.getAdminTag      : <==      Total: 2
2020-08-02 16:37:03.302 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TagDao.deleteTag        : ==>  Preparing: delete from blog.tag where id = ? 
2020-08-02 16:37:03.303 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TagDao.deleteTag        : ==> Parameters: 29(Long)
2020-08-02 16:37:03.304 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.TagDao.deleteTag        : <==    Updates: 1
2020-08-02 16:37:03.419 DEBUG 2316 --- [http-nio-8080-exec-2] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.tag 
2020-08-02 16:37:03.419 DEBUG 2316 --- [http-nio-8080-exec-2] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : ==> Parameters: 
2020-08-02 16:37:03.427 DEBUG 2316 --- [http-nio-8080-exec-2] c.wjw.blog.dao.TagDao.getAdminTag_COUNT  : <==      Total: 1
2020-08-02 16:37:03.430 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TagDao.getAdminTag      : ==>  Preparing: select * from blog.tag order by name LIMIT ? 
2020-08-02 16:37:03.430 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TagDao.getAdminTag      : ==> Parameters: 5(Integer)
2020-08-02 16:37:03.431 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TagDao.getAdminTag      : <==      Total: 1
2020-08-02 16:37:07.247 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.type 
2020-08-02 16:37:07.247 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==> Parameters: 
2020-08-02 16:37:07.249 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.blog.dao.TypeDao.getAdminType_COUNT  : <==      Total: 1
2020-08-02 16:37:07.251 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name LIMIT ? 
2020-08-02 16:37:07.252 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 5(Integer)
2020-08-02 16:37:07.253 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 5
2020-08-02 16:37:10.893 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.TypeDao.getTypeById     : ==>  Preparing: select * from blog.type where id = ? 
2020-08-02 16:37:10.894 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.TypeDao.getTypeById     : ==> Parameters: 17(Long)
2020-08-02 16:37:10.895 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.TypeDao.getTypeById     : <==      Total: 1
2020-08-02 16:37:18.272 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.getTypeByName   : ==>  Preparing: select * from blog.type where name = ? 
2020-08-02 16:37:18.273 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.getTypeByName   : ==> Parameters: 学习日志(String)
2020-08-02 16:37:18.273 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.getTypeByName   : <==      Total: 0
2020-08-02 16:37:18.275 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.updateType      : ==>  Preparing: update blog.type set name = ? where id = ? 
2020-08-02 16:37:18.276 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.updateType      : ==> Parameters: 学习日志(String), 17(Long)
2020-08-02 16:37:18.278 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.updateType      : <==    Updates: 1
2020-08-02 16:37:18.431 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.type 
2020-08-02 16:37:18.431 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==> Parameters: 
2020-08-02 16:37:18.433 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.blog.dao.TypeDao.getAdminType_COUNT  : <==      Total: 1
2020-08-02 16:37:18.433 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name LIMIT ? 
2020-08-02 16:37:18.434 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 5(Integer)
2020-08-02 16:37:18.435 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 5
2020-08-02 16:37:22.585 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.deleteType      : ==>  Preparing: delete from blog.type where id = ? 
2020-08-02 16:37:22.585 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.deleteType      : ==> Parameters: 20(Long)
2020-08-02 16:37:22.586 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.deleteType      : <==    Updates: 1
2020-08-02 16:37:22.747 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.type 
2020-08-02 16:37:22.747 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==> Parameters: 
2020-08-02 16:37:22.749 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.blog.dao.TypeDao.getAdminType_COUNT  : <==      Total: 1
2020-08-02 16:37:22.750 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name LIMIT ? 
2020-08-02 16:37:22.750 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 5(Integer)
2020-08-02 16:37:22.751 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 5
2020-08-02 16:37:24.407 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.deleteType      : ==>  Preparing: delete from blog.type where id = ? 
2020-08-02 16:37:24.407 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.deleteType      : ==> Parameters: 18(Long)
2020-08-02 16:37:24.409 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.deleteType      : <==    Updates: 1
2020-08-02 16:37:24.499 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.type 
2020-08-02 16:37:24.499 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==> Parameters: 
2020-08-02 16:37:24.501 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.blog.dao.TypeDao.getAdminType_COUNT  : <==      Total: 1
2020-08-02 16:37:24.503 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name LIMIT ? 
2020-08-02 16:37:24.504 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 5(Integer)
2020-08-02 16:37:24.506 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 5
2020-08-02 16:37:26.181 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.deleteType      : ==>  Preparing: delete from blog.type where id = ? 
2020-08-02 16:37:26.182 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.deleteType      : ==> Parameters: 19(Long)
2020-08-02 16:37:26.183 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.deleteType      : <==    Updates: 1
2020-08-02 16:37:26.354 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.type 
2020-08-02 16:37:26.354 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==> Parameters: 
2020-08-02 16:37:26.360 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.blog.dao.TypeDao.getAdminType_COUNT  : <==      Total: 1
2020-08-02 16:37:26.361 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name LIMIT ? 
2020-08-02 16:37:26.361 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 5(Integer)
2020-08-02 16:37:26.362 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 5
2020-08-02 16:37:28.296 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.deleteType      : ==>  Preparing: delete from blog.type where id = ? 
2020-08-02 16:37:28.296 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.deleteType      : ==> Parameters: 22(Long)
2020-08-02 16:37:28.297 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.deleteType      : <==    Updates: 1
2020-08-02 16:37:28.362 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.type 
2020-08-02 16:37:28.363 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==> Parameters: 
2020-08-02 16:37:28.365 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.blog.dao.TypeDao.getAdminType_COUNT  : <==      Total: 1
2020-08-02 16:37:28.366 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name LIMIT ? 
2020-08-02 16:37:28.367 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 5(Integer)
2020-08-02 16:37:28.369 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 5
2020-08-02 16:37:30.305 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.deleteType      : ==>  Preparing: delete from blog.type where id = ? 
2020-08-02 16:37:30.305 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.deleteType      : ==> Parameters: 21(Long)
2020-08-02 16:37:30.306 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.deleteType      : <==    Updates: 1
2020-08-02 16:37:30.461 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.type 
2020-08-02 16:37:30.461 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==> Parameters: 
2020-08-02 16:37:30.463 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.blog.dao.TypeDao.getAdminType_COUNT  : <==      Total: 1
2020-08-02 16:37:30.464 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name LIMIT ? 
2020-08-02 16:37:30.464 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 5(Integer)
2020-08-02 16:37:30.468 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 4
2020-08-02 16:37:34.525 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.deleteType      : ==>  Preparing: delete from blog.type where id = ? 
2020-08-02 16:37:34.525 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.deleteType      : ==> Parameters: 24(Long)
2020-08-02 16:37:34.526 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.deleteType      : <==    Updates: 1
2020-08-02 16:37:34.702 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.type 
2020-08-02 16:37:34.702 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==> Parameters: 
2020-08-02 16:37:34.704 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.blog.dao.TypeDao.getAdminType_COUNT  : <==      Total: 1
2020-08-02 16:37:34.705 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name LIMIT ? 
2020-08-02 16:37:34.705 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 5(Integer)
2020-08-02 16:37:34.706 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 3
2020-08-02 16:37:40.299 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.deleteType      : ==>  Preparing: delete from blog.type where id = ? 
2020-08-02 16:37:40.299 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.deleteType      : ==> Parameters: 23(Long)
2020-08-02 16:37:40.301 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.deleteType      : <==    Updates: 1
2020-08-02 16:37:40.371 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.type 
2020-08-02 16:37:40.372 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==> Parameters: 
2020-08-02 16:37:40.385 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.blog.dao.TypeDao.getAdminType_COUNT  : <==      Total: 1
2020-08-02 16:37:40.386 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name LIMIT ? 
2020-08-02 16:37:40.386 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 5(Integer)
2020-08-02 16:37:40.387 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 2
2020-08-02 16:37:43.167 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.deleteType      : ==>  Preparing: delete from blog.type where id = ? 
2020-08-02 16:37:43.168 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.deleteType      : ==> Parameters: 25(Long)
2020-08-02 16:37:43.169 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.TypeDao.deleteType      : <==    Updates: 1
2020-08-02 16:37:43.329 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.type 
2020-08-02 16:37:43.330 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.blog.dao.TypeDao.getAdminType_COUNT  : ==> Parameters: 
2020-08-02 16:37:43.332 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.blog.dao.TypeDao.getAdminType_COUNT  : <==      Total: 1
2020-08-02 16:37:43.333 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name LIMIT ? 
2020-08-02 16:37:43.333 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 5(Integer)
2020-08-02 16:37:43.334 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 1
2020-08-02 16:37:45.767 DEBUG 2316 --- [http-nio-8080-exec-2] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id 
2020-08-02 16:37:45.768 DEBUG 2316 --- [http-nio-8080-exec-2] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2020-08-02 16:37:45.771 DEBUG 2316 --- [http-nio-8080-exec-2] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2020-08-02 16:37:45.771 DEBUG 2316 --- [http-nio-8080-exec-2] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: select b.id bid, b.title, b.update_time, b.recommend, b.type_id, b.publish, t.id tid, t.name from blog.blog b left join blog.type t on b.type_id = t.id order by b.update_time desc LIMIT ? 
2020-08-02 16:37:45.771 DEBUG 2316 --- [http-nio-8080-exec-2] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2020-08-02 16:37:45.772 DEBUG 2316 --- [http-nio-8080-exec-2] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 1
2020-08-02 16:37:45.773 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:37:45.773 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:37:45.774 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 1
2020-08-02 16:37:48.294 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getBlogById     : ==>  Preparing: select b.id, b.publish, b.flag, b.title, b.content, b.type_id, b.first_picture, b.description, b.recommend, b.share_statement, b.appreciation, b.comment, b.tag_ids from blog.blog b where b.id = ? 
2020-08-02 16:37:48.295 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getBlogById     : ==> Parameters: 1596213997903(Long)
2020-08-02 16:37:48.298 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getBlogById     : <==      Total: 1
2020-08-02 16:37:48.299 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:37:48.299 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:37:48.302 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 1
2020-08-02 16:37:48.302 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.TagDao.getAdminTag      : ==>  Preparing: select * from blog.tag order by name 
2020-08-02 16:37:48.303 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.TagDao.getAdminTag      : ==> Parameters: 
2020-08-02 16:37:48.304 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.TagDao.getAdminTag      : <==      Total: 1
2020-08-02 16:38:13.757 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.BlogDao.updateBlog      : ==>  Preparing: update blog.blog set publish = ?, flag = ?, title = ?, content = ?, type_id = ?, first_picture = ?, description = ?, recommend = ?, share_statement = ?, appreciation = ?, comment = ?, update_time = ?, tag_ids = ? where id = ? 
2020-08-02 16:38:13.759 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.BlogDao.updateBlog      : ==> Parameters: true(Boolean), 原创(String), Java学习记录(String), [TOC]

## 基本数据类型

![img](https://images2017.cnblogs.com/blog/1170065/201801/1170065-20180104154110299-576214776.png)

整形常量默认为int，浮点型常量默认为double

+两边如果有String类型就是连接符，否则是运算符



## 包装类

基本类型都有对应的包装类型，基本类型与其对应的包装类型之间的赋值使用自动装箱与拆箱完成。

```java
Integer x = 2;     // 装箱 调用了 Integer.valueOf(2)
int y = x;         // 拆箱 调用了 X.intValue()
```

#### 用途

- 集合不允许存放基本数据类型，故常用包装类
- 包含了每种基本类型的相关属性，如最大值，最小值，所占位数等
- 作为基本数据类型对应的类类型，提供了一系列实用的对象操作，如类型转换，进制转换等

#### 和基本类型的对比

- 通过引用指向实例，具体的实例保存在堆里；基本类型直接保存值在栈里
- 初值为null；基本类型的初值视具体的类型而定

#### 注意

- 无论如何，Integer与new Integer不会相等。不会经历拆箱过程，new出来的对象存放在堆中，而非new的Integer常量则在常量池（在方法区），他们的内存地址不一样，所以为false。

- 两个都是非new出来的Integer，如果数在-128到127之间，则是true,否则为false。

  ```java
  Integer x = new Integer(123);
  Integer y = new Integer(123);
  System.out.println(x == y);    // false
  Integer z = Integer.valueOf(123);
  Integer k = Integer.valueOf(123);
  System.out.println(z == k);   // true
  ```

- 两个都是new出来的,都为false。还是内存地址不一样。

- int和Integer(无论new否)比，都为true，因为会把Integer自动拆箱为int再去比。

#### 基本类型对应的缓存池(缓存池中的对象已经创建好存在常量池中)

- boolean values true and false
- all byte values
- short values between -128 and 127
- int values between -128 and 127
- char in the range \u0000 to \u007F

在使用这些基本类型对应的包装类型时，如果该数值范围在缓存池范围内，就可以直接使用缓存池中的对象。



## String

String 类被 final修饰，因此它不可被继承。(Integer 等包装类也不能被继承）

String的成员变量被final和private修饰，所以初始化后不可更改引用，外界也不能更改

#### 不可变的好处

**1. 可以缓存 hash 值**

因为 String 的 hash 值经常被使用，例如 String 用做 HashMap 的 key。不可变的特性可以使得 hash 值也不可变，因此只需要进行一次计算。

**2. String Pool 的需要**

如果一个 String 对象已经被创建过了，那么就会从 String Pool 中取得引用。只有 String 是不可变的，才可能使用 String Pool。

[![img](https://camo.githubusercontent.com/152a310f7698bb23ae201081c5c497b5c1d396d9/68747470733a2f2f63732d6e6f7465732d313235363130393739362e636f732e61702d6775616e677a686f752e6d7971636c6f75642e636f6d2f696d6167652d32303139313231303030343133323839342e706e67)](https://camo.githubusercontent.com/152a310f7698bb23ae201081c5c497b5c1d396d9/68747470733a2f2f63732d6e6f7465732d313235363130393739362e636f732e61702d6775616e677a686f752e6d7971636c6f75642e636f6d2f696d6167652d32303139313231303030343133323839342e706e67)



**3. 安全性**

String 经常作为参数，String 不可变性可以保证参数不可变。例如在作为网络连接参数的情况下，如果 String 是可变的，那么在网络连接过程中，String 被改变，改变 String 的那一方以为现在连接的是其它主机，而实际情况却不一定是。

**4. 线程安全**

String 不可变性天生具备线程安全，可以在多个线程中安全地使用。



## String，StringBuffer，StringBuilder

**1. 可变性**

- String 不可变
- StringBuffer 和 StringBuilder 可变

**2. 线程安全**

- String 不可变，因此是线程安全的
- StringBuilder 不是线程安全的
- StringBuffer 是线程安全的，内部使用 synchronized 进行同步

[StackOverflow : String, StringBuffer, and StringBuilder](https://stackoverflow.com/questions/2971315/string-stringbuffer-and-stringbuilder)



## String Pool

字符串常量池（String Pool）保存着所有字符串字面量（literal strings），这些字面量在编译时期就确定。不仅如此，还可以使用 String 的 intern() 方法在运行过程将字符串添加到 String Pool 中。

当一个字符串调用 intern() 方法时，如果 String Pool 中已经存在一个字符串和该字符串值相等（使用 equals() 方法进行确定），那么就会返回 String Pool 中字符串的引用；否则，就会在 String Pool 中添加一个新的字符串，并返回这个新字符串的引用。

下面示例中，s1 和 s2 采用 new String() 的方式新建了两个不同字符串，而 s3 和 s4 是通过 s1.intern() 方法取得同一个字符串引用。intern() 首先把 s1 引用的字符串放到 String Pool 中，然后返回这个字符串引用。因此 s3 和 s4 引用的是同一个字符串。

```
String s1 = new String("aaa");
String s2 = new String("aaa");
System.out.println(s1 == s2);           // false
String s3 = s1.intern();
String s4 = s1.intern();
System.out.println(s3 == s4);           // true
```

如果是采用 "bbb" 这种字面量的形式创建字符串，会自动地将字符串放入 String Pool 中。

```
String s5 = "bbb";
String s6 = "bbb";
System.out.println(s5 == s6);  // true
```

#### new String("abc")

使用这种方式一共会创建两个字符串对象（前提是 String Pool 中还没有 "abc" 字符串对象）。

- "abc" 属于字符串字面量，因此编译时期会在 String Pool 中创建一个字符串对象，指向这个 "abc" 字符串字面量；
- 而使用 new 的方式会在堆中创建一个字符串对象。

#### String创建对象问题

https://www.cnblogs.com/chenghuanhuaning/articles/11255642.html



## 参数传递

Java 的参数是以值传递的形式传入方法中，而不是引用传递。



## float 和 double

Java 不能隐式执行向下转型，因为这会使得精度降低。

1.1 字面量属于 double 类型，不能直接将 1.1 直接赋值给 float 变量，因为这是向下转型。

```
// float f = 1.1;
```

1.1f 字面量才是 float 类型。

```
float f = 1.1f;
```



## 隐式类型转换

因为字面量 1 是 int 类型，它比 short 类型精度要高，因此不能隐式地将 int 类型向下转型为 short 类型。

```
short s1 = 1;
// s1 = s1 + 1;
```

但是使用 += 或者 ++ 运算符会执行隐式类型转换。

```
s1 += 1;
s1++;
```

上面的语句相当于将 s1 + 1 的计算结果进行了向下转型：

```
s1 = (short) (s1 + 1);
```



## final

#### 修饰类

表明这个类不能被继承，final类中的所有成员方法都会被隐式地指定为final方法

#### 修饰方法

父类的final方法是不能被子类所覆盖的，即此方法不能被重写

但是如果访问权限为private，那么这个方法不能直接继承此方法，此时可以在子类中定义同名的方法名和参数（类的private方法会被隐式地指定为final方法）

#### 修饰变量

**final成员变量表示常量，只能被赋值一次，赋值后值不再改变。**

当final修饰一个**基本数据类型**时，表示该基本数据类型的值一旦**在初始化后便不能发生变化**；如果final修饰一个**引用类型**时，则在对其**初始化之后便不能再让其指向其他对象**了，但**该引用所指向的对象的内容是可以发生变化的**。本质上是一回事，因为引用的值是一个地址，final要求值，即地址的值不发生变化。

final修饰一个**成员变量**（属性），**必须在定义时或者构造器中进行初始化赋值**，**而且final变量一旦被初始化赋值之后，就不能再被赋值了**。

当函数的参数类型声明为final时，说明该参数是只读型的。即你可以读取使用该参数，但是无法改变该参数的值。

#### final变量和普通变量的区别

https://blog.csdn.net/hc1428090104/article/details/99218541



## static

**1. 静态变量**

- 静态变量：又称为类变量，也就是说这个变量属于类的，类所有的实例都共享静态变量，可以直接通过类名来访问它。静态变量在内存中只存在一份。
- 实例变量：每创建一个实例就会产生一个实例变量，它与该实例同生共死。

**2. 静态方法**

静态方法在类加载的时候就存在了，它不依赖于任何实例。所以静态方法必须有实现，也就是说它不能是抽象方法。

只能访问所属类的静态字段和静态方法，方法中不能有 this 和 super 关键字，因为这两个关键字与具体对象关联。

**3. 静态语句块**

静态语句块在类初始化时运行一次。

```
public class A {
    static {
        System.out.println("123");
    }

    public static void main(String[] args) {
        A a1 = new A();
        A a2 = new A();
    }
}
```

**4. 静态内部类**

非静态内部类依赖于外部类的实例，也就是说需要先创建外部类实例，才能用这个实例去创建非静态内部类。而静态内部类不需要。

```
public class OuterClass {

    class InnerClass {
    }

    static class StaticInnerClass {
    }

    public static void main(String[] args) {
        // InnerClass innerClass = new InnerClass(); // 'OuterClass.this' cannot be referenced from a static context
        OuterClass outerClass = new OuterClass();
        InnerClass innerClass = outerClass.new InnerClass();
        StaticInnerClass staticInnerClass = new StaticInnerClass();
    }
}
```

静态内部类不能访问外部类的非静态的变量和方法。

**5. 初始化顺序**

静态变量和静态语句块优先于实例变量和普通语句块，静态变量和静态语句块的初始化顺序取决于它们在代码中的顺序。

```
public static String staticField = "静态变量";
static {
    System.out.println("静态语句块");
}
public String field = "实例变量";
{
    System.out.println("普通语句块");
}
```

最后才是构造函数的初始化。

```
public InitialOrderTest() {
    System.out.println("构造函数");
}
```

存在继承的情况下，初始化顺序为：

- 父类（静态变量、静态语句块）
- 子类（静态变量、静态语句块）
- 父类（实例变量、普通语句块）
- 父类（构造函数）
- 子类（实例变量、普通语句块）
- 子类（构造函数）



## Object 通用方法

#### equals()

- 对于基本类型，== 判断两个值是否相等，基本类型没有 equals() 方法。
- 对于引用类型，== 判断两个变量是否引用同一个对象，而 equals() 判断引用的对象是否等价。

#### hashCode()

hashCode() 返回哈希值，而 equals() 是用来判断两个对象是否等价。等价的两个对象散列值一定相同，但是散列值相同的两个对象不一定等价，这是因为计算哈希值具有随机性，两个值不同的对象可能计算出相同的哈希值。

在覆盖 equals() 方法时应当总是覆盖 hashCode() 方法，保证等价的两个对象哈希值也相等。

HashSet 和 HashMap 等集合类使用了 hashCode() 方法来计算对象应该存储的位置，因此要将对象添加到这些集合类中，需要让对应的类实现 hashCode() 方法。

#### toString()



#### clone()

https://www.cnblogs.com/shoshana-kong/p/10820420.html



## 访问权限

Java 中有三个访问权限修饰符：private、protected 以及 public，如果不加访问修饰符，表示包级可见。

可以对类或类中的成员（字段和方法）加上访问修饰符。

- 类可见表示其它类可以用这个类创建实例对象。
- 成员可见表示其它类可以用这个类的实例对象访问到该成员；

protected 用于修饰成员，表示在继承体系中成员对于子类可见，但是这个访问修饰符对于类没有意义。

设计良好的模块会隐藏所有的实现细节，把它的 API 与它的实现清晰地隔离开来。模块之间只通过它们的 API 进行通信，一个模块不需要知道其他模块的内部工作情况，这个概念被称为信息隐藏或封装。因此访问权限应当尽可能地使每个类或者成员不被外界访问。

如果子类的方法重写了父类的方法，那么子类中该方法的访问级别不允许低于父类的访问级别。这是为了确保可以使用父类实例的地方都可以使用子类实例去代替，也就是确保满足里氏替换原则。



## 抽象类和接口

#### 抽象类

抽象类和抽象方法都使用 abstract 关键字进行声明。如果一个类中包含抽象方法，那么这个类必须声明为抽象类。

抽象类和普通类最大的区别是，抽象类不能被实例化，只能被继承。

#### 接口

接口是抽象类的延伸，在 Java 8 之前，它可以看成是一个完全抽象的类，也就是说它不能有任何的方法实现。

从 Java 8 开始，接口也可以拥有默认的方法实现，这是因为不支持默认方法的接口的维护成本太高了。在 Java 8 之前，如果一个接口想要添加新的方法，那么要修改所有实现了该接口的类，让它们都实现新增的方法。

接口的成员（字段 + 方法）默认都是 public 的，并且不允许定义为 private 或者 protected。

接口的字段默认都是 static 和 final 的。

#### 比较

- 从设计层面上看，抽象类提供了一种 IS-A 关系，需要满足里式替换原则，即子类对象必须能够替换掉所有父类对象。而接口更像是一种 LIKE-A 关系，它只是提供一种方法实现契约，并不要求接口和实现接口的类具有 IS-A 关系。
- 从使用上来看，一个类可以实现多个接口，但是不能继承多个抽象类。
- 接口的字段只能是 static 和 final 类型的，而抽象类的字段没有这种限制。
- 接口的成员只能是 public 的，而抽象类的成员可以有多种访问权限。

#### 使用选择

使用接口：

- 需要让不相关的类都实现一个方法，例如不相关的类都可以实现 Compareable 接口中的 compareTo() 方法；
- 需要使用多重继承。

使用抽象类：

- 需要在几个相关的类中共享代码。
- 需要能控制继承来的成员的访问权限，而不是都为 public。
- 需要继承非静态和非常量字段。

在很多情况下，接口优先于抽象类。因为接口没有抽象类严格的类层次结构要求，可以灵活地为一个类添加行为。并且从 Java 8 开始，接口也可以有默认的方法实现，使得修改接口的成本也变的很低。



## super

- 访问父类的构造函数：可以使用 super() 函数访问父类的构造函数，从而委托父类完成一些初始化的工作。应该注意到，子类一定会调用父类的构造函数来完成初始化工作，一般是调用父类的默认构造函数，如果子类需要调用父类其它构造函数，那么就可以使用 super() 函数。
- 访问父类的成员：如果子类重写了父类的某个方法，可以通过使用 super 关键字来引用父类的方法实现。



## 反射

在运行过程中获得类、对象、方法的所有信息

#### API

https://www.cnblogs.com/sun1993/p/7828535.html

#### 优缺点

优点：反射可以动态创建对象和编译，最大限度发挥了java的灵活性。
缺点：对性能有影响。反射基本上是一种解释操作，告诉JVM我们要做什么并且满足我们的需求，这类操作总是慢于直接执行java代码。



## 异常

![Java-exception.png](http://assets.tianmaying.com/md-image/c887bccaa4b144622c82685097908f3d.png)

Error：是程序无法控制的，通常会导致JVM终止线程

Exception：通常是程序可以处理的；

检查异常需要使用try-catch语句捕获，或者用throws抛出；

不受检查异常(RuntimeException及其子类和Error)是编译器不要求强制处理的异常

#### 异常处理机制

抛出异常：当一个方法出现错误引发异常时，方法创建异常对象并交付运行时系统，异常对象中包含了异常类型和异常出现时的程序状态等异常信息。运行时系统负责寻找处置异常的代码并执行。

捕捉异常：在方法抛出异常之后，运行时系统将转为寻找合适的异常处理器（exception handler）。潜在的异常处理器是异常发生时依次存留在调用栈中的方法的集合。当异常处理器所能处理的异常类型与方法抛出的异常类型相符时，即为合适的异常处理器。运行时系统从发生异常的方法开始，依次回查调用栈中的方法，直至找到含有合适异常处理器的方法并执行。当运行时系统遍历调用栈而未找到合适的异常处理器，则运行时系统终止。同时，意味着Java程序的终止。

（发生异常->创建异常对象->运行时系统寻找合适的异常处理器->寻找并执行合适的异常处理器的方法，如果没找到：程序终止）



(String), 17(Long), https://picsum.photos/id/1004/100/100(String), 文章记录了我在Java复习过程中对网上资料的总结(String), true(Boolean), true(Boolean), true(Boolean), true(Boolean), 2020-08-02 16:38:13.757(Timestamp), 26(String), 1596213997903(Long)
2020-08-02 16:38:13.764 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.BlogDao.updateBlog      : <==    Updates: 1
2020-08-02 16:38:13.923 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==>  Preparing: SELECT count(0) FROM blog.blog b LEFT JOIN blog.type t ON b.type_id = t.id 
2020-08-02 16:38:13.923 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : ==> Parameters: 
2020-08-02 16:38:13.924 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.b.dao.BlogDao.getAllBlogQuery_COUNT  : <==      Total: 1
2020-08-02 16:38:13.924 DEBUG 2316 --- [http-nio-8080-exec-10] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==>  Preparing: select b.id bid, b.title, b.update_time, b.recommend, b.type_id, b.publish, t.id tid, t.name from blog.blog b left join blog.type t on b.type_id = t.id order by b.update_time desc LIMIT ? 
2020-08-02 16:38:13.924 DEBUG 2316 --- [http-nio-8080-exec-10] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : ==> Parameters: 6(Integer)
2020-08-02 16:38:13.926 DEBUG 2316 --- [http-nio-8080-exec-10] c.wjw.blog.dao.BlogDao.getAllBlogQuery   : <==      Total: 1
2020-08-02 16:38:13.926 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : ==>  Preparing: select * from blog.type order by name 
2020-08-02 16:38:13.926 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : ==> Parameters: 
2020-08-02 16:38:13.928 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.TypeDao.getAdminType    : <==      Total: 1
2020-08-02 17:13:43.626  INFO 2316 --- [Thread-354] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-02 17:13:43.627  INFO 2316 --- [Thread-354] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown initiated...
2020-08-02 17:13:43.639  INFO 2316 --- [Thread-354] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown completed.
2020-08-02 17:13:44.013  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Starting BlogApplication on LAPTOP-389VIUI1 with PID 2316 (E:\java workspace\blog\target\classes started by 王金伟 in E:\java workspace\blog)
2020-08-02 17:13:44.013 DEBUG 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Running with Spring Boot v2.3.0.RELEASE, Spring v5.2.6.RELEASE
2020-08-02 17:13:44.013  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : No active profile set, falling back to default profiles: default
2020-08-02 17:13:44.728  INFO 2316 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-08-02 17:13:44.729  INFO 2316 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-08-02 17:13:44.729  INFO 2316 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-08-02 17:13:44.777  INFO 2316 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-08-02 17:13:44.778  INFO 2316 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 761 ms
2020-08-02 17:13:45.051  INFO 2316 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-08-02 17:13:45.093  INFO 2316 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-08-02 17:13:45.334  INFO 2316 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-08-02 17:13:45.346  INFO 2316 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-08-02 17:13:45.351  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Started BlogApplication in 1.467 seconds (JVM running for 4775.296)
2020-08-02 17:13:45.352  INFO 2316 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-08-02 17:13:48.962  INFO 2316 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-02 17:13:48.963  INFO 2316 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-08-02 17:13:48.977  INFO 2316 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2020-08-02 17:13:48.984  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:13:48.989  INFO 2316 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Starting...
2020-08-02 17:13:49.005  INFO 2316 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Start completed.
2020-08-02 17:13:49.005 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:13:49.006 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:13:49.009 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:13:49.010 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id LIMIT ? 
2020-08-02 17:13:49.010 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:13:49.011 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:13:49.013  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:14:49.145  INFO 2316 --- [http-nio-8080-exec-6] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:14:49.153 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:14:49.154 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:14:49.154 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:14:49.155 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id LIMIT ? 
2020-08-02 17:14:49.155 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:14:49.156 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:14:49.157  INFO 2316 --- [http-nio-8080-exec-6] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:14:51.623  INFO 2316 --- [http-nio-8080-exec-9] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:14:51.624 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:14:51.624 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:14:51.625 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:14:51.626 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id LIMIT ? 
2020-08-02 17:14:51.626 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:14:51.627 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:14:51.628  INFO 2316 --- [http-nio-8080-exec-9] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:14:53.163  INFO 2316 --- [http-nio-8080-exec-4] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:14:53.165 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:14:53.166 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:14:53.167 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:14:53.168 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id LIMIT ? 
2020-08-02 17:14:53.168 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:14:53.169 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:14:53.169  INFO 2316 --- [http-nio-8080-exec-4] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:19:24.934  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:19:24.936 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:19:24.936 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:19:24.937 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:19:24.938 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id LIMIT ? 
2020-08-02 17:19:24.938 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:19:24.940 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:19:24.941  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:19:55.251  INFO 2316 --- [http-nio-8080-exec-5] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:19:55.253 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:19:55.253 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:19:55.254 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:19:55.255 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id LIMIT ? 
2020-08-02 17:19:55.255 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:19:55.256 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:19:55.257  INFO 2316 --- [http-nio-8080-exec-5] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:20:55.839  INFO 2316 --- [Thread-524] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-02 17:20:55.839  INFO 2316 --- [Thread-524] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Shutdown initiated...
2020-08-02 17:20:55.845  INFO 2316 --- [Thread-524] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Shutdown completed.
2020-08-02 17:20:56.035  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Starting BlogApplication on LAPTOP-389VIUI1 with PID 2316 (E:\java workspace\blog\target\classes started by 王金伟 in E:\java workspace\blog)
2020-08-02 17:20:56.035 DEBUG 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Running with Spring Boot v2.3.0.RELEASE, Spring v5.2.6.RELEASE
2020-08-02 17:20:56.035  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : No active profile set, falling back to default profiles: default
2020-08-02 17:20:56.368  INFO 2316 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-08-02 17:20:56.368  INFO 2316 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-08-02 17:20:56.368  INFO 2316 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-08-02 17:20:56.398  INFO 2316 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-08-02 17:20:56.398  INFO 2316 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 361 ms
2020-08-02 17:20:56.802  INFO 2316 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-08-02 17:20:56.894  INFO 2316 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-08-02 17:20:57.248  INFO 2316 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-08-02 17:20:57.260  INFO 2316 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-08-02 17:20:57.264  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Started BlogApplication in 1.25 seconds (JVM running for 5207.209)
2020-08-02 17:20:57.265  INFO 2316 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-08-02 17:21:00.962  INFO 2316 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-02 17:21:00.964  INFO 2316 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-08-02 17:21:00.977  INFO 2316 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 12 ms
2020-08-02 17:21:00.981  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:21:01.086  INFO 2316 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Starting...
2020-08-02 17:21:01.101  INFO 2316 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Start completed.
2020-08-02 17:21:01.102 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:21:01.102 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:21:01.104 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:21:01.104 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id LIMIT ? 
2020-08-02 17:21:01.104 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:21:01.107 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:21:01.109  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:21:35.186  INFO 2316 --- [http-nio-8080-exec-5] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:21:35.189 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:21:35.190 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:21:35.191 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:21:35.193 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id LIMIT ? 
2020-08-02 17:21:35.195 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:21:35.197 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:21:35.198  INFO 2316 --- [http-nio-8080-exec-5] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:25:02.073  INFO 2316 --- [Thread-694] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-02 17:25:02.073  INFO 2316 --- [Thread-694] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Shutdown initiated...
2020-08-02 17:25:02.081  INFO 2316 --- [Thread-694] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Shutdown completed.
2020-08-02 17:25:02.219  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Starting BlogApplication on LAPTOP-389VIUI1 with PID 2316 (E:\java workspace\blog\target\classes started by 王金伟 in E:\java workspace\blog)
2020-08-02 17:25:02.219 DEBUG 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Running with Spring Boot v2.3.0.RELEASE, Spring v5.2.6.RELEASE
2020-08-02 17:25:02.219  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : No active profile set, falling back to default profiles: default
2020-08-02 17:25:02.646  INFO 2316 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-08-02 17:25:02.647  INFO 2316 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-08-02 17:25:02.647  INFO 2316 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-08-02 17:25:02.677  INFO 2316 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-08-02 17:25:02.677  INFO 2316 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 456 ms
2020-08-02 17:25:02.978  INFO 2316 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-08-02 17:25:03.030  INFO 2316 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-08-02 17:25:03.360  INFO 2316 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-08-02 17:25:03.376  INFO 2316 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-08-02 17:25:03.379  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Started BlogApplication in 1.182 seconds (JVM running for 5453.324)
2020-08-02 17:25:03.381  INFO 2316 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-08-02 17:25:07.705  INFO 2316 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-02 17:25:07.706  INFO 2316 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-08-02 17:25:07.717  INFO 2316 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2020-08-02 17:25:07.720  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:25:07.726  INFO 2316 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Starting...
2020-08-02 17:25:07.739  INFO 2316 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Start completed.
2020-08-02 17:25:07.739 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:25:07.739 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:25:07.741 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:25:07.742 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 17:25:07.742 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:25:07.744 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:25:07.745 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc 
2020-08-02 17:25:07.745 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 
2020-08-02 17:25:07.746 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:25:07.747  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:47:47.061  INFO 2316 --- [Thread-864] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-08-02 17:47:47.062  INFO 2316 --- [Thread-864] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Shutdown initiated...
2020-08-02 17:47:47.068  INFO 2316 --- [Thread-864] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Shutdown completed.
2020-08-02 17:47:47.182  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Starting BlogApplication on LAPTOP-389VIUI1 with PID 2316 (E:\java workspace\blog\target\classes started by 王金伟 in E:\java workspace\blog)
2020-08-02 17:47:47.182 DEBUG 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Running with Spring Boot v2.3.0.RELEASE, Spring v5.2.6.RELEASE
2020-08-02 17:47:47.182  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : No active profile set, falling back to default profiles: default
2020-08-02 17:47:47.518  INFO 2316 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-08-02 17:47:47.518  INFO 2316 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-08-02 17:47:47.518  INFO 2316 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-08-02 17:47:47.550  INFO 2316 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-08-02 17:47:47.550  INFO 2316 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 367 ms
2020-08-02 17:47:47.804  INFO 2316 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-08-02 17:47:47.853  INFO 2316 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2020-08-02 17:47:48.248  INFO 2316 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-08-02 17:47:48.263  INFO 2316 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-08-02 17:47:48.268  INFO 2316 --- [restartedMain] com.wjw.blog.BlogApplication             : Started BlogApplication in 1.105 seconds (JVM running for 6818.213)
2020-08-02 17:47:48.269  INFO 2316 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-08-02 17:47:51.716  INFO 2316 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-02 17:47:51.717  INFO 2316 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-08-02 17:47:51.731  INFO 2316 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2020-08-02 17:47:51.734  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:47:51.743  INFO 2316 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-7 - Starting...
2020-08-02 17:47:51.758  INFO 2316 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-7 - Start completed.
2020-08-02 17:47:51.759 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:47:51.759 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:47:51.761 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:47:51.761 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 17:47:51.762 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:47:51.763 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:47:51.764  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:49:02.702  INFO 2316 --- [http-nio-8080-exec-6] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:49:02.707 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:49:02.707 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:49:02.710 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:49:02.711 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 17:49:02.711 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:49:02.712 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:49:02.713  INFO 2316 --- [http-nio-8080-exec-6] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:50:07.058  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:50:07.059 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:50:07.059 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:50:07.060 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:50:07.060 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 17:50:07.061 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:50:07.061 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:50:07.062  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:50:49.814  INFO 2316 --- [http-nio-8080-exec-5] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:50:49.818 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:50:49.818 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:50:49.819 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:50:49.820 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 17:50:49.820 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:50:49.821 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:50:49.822  INFO 2316 --- [http-nio-8080-exec-5] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:50:51.346  INFO 2316 --- [http-nio-8080-exec-9] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:50:51.349 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:50:51.349 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:50:51.350 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:50:51.351 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 17:50:51.351 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:50:51.352 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:50:51.353  INFO 2316 --- [http-nio-8080-exec-9] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:51:01.225  INFO 2316 --- [http-nio-8080-exec-3] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:51:01.227 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:51:01.227 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:51:01.228 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:51:01.228 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 17:51:01.229 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:51:01.230 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:51:01.230  INFO 2316 --- [http-nio-8080-exec-3] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:51:17.464  INFO 2316 --- [http-nio-8080-exec-7] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:51:17.467 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:51:17.467 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:51:17.468 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:51:17.468 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 17:51:17.469 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:51:17.470 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:51:17.470  INFO 2316 --- [http-nio-8080-exec-7] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:51:33.785  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:51:33.786 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:51:33.786 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:51:33.787 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:51:33.787 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 17:51:33.788 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:51:33.788 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:51:33.789  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:51:35.173  INFO 2316 --- [http-nio-8080-exec-5] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:51:35.177 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:51:35.178 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:51:35.179 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:51:35.180 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 17:51:35.180 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:51:35.182 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:51:35.182  INFO 2316 --- [http-nio-8080-exec-5] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:51:44.293  INFO 2316 --- [http-nio-8080-exec-9] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:51:44.295 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:51:44.295 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:51:44.296 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:51:44.297 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 17:51:44.297 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:51:44.298 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:51:44.298  INFO 2316 --- [http-nio-8080-exec-9] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:52:02.274  INFO 2316 --- [http-nio-8080-exec-3] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:52:02.276 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:52:02.276 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:52:02.277 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:52:02.278 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 17:52:02.278 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:52:02.279 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:52:02.279  INFO 2316 --- [http-nio-8080-exec-3] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:52:15.800  INFO 2316 --- [http-nio-8080-exec-7] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:52:15.802 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:52:15.802 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:52:15.803 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:52:15.803 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 17:52:15.803 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:52:15.804 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:52:15.805  INFO 2316 --- [http-nio-8080-exec-7] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:57:27.447  INFO 2316 --- [http-nio-8080-exec-2] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:57:27.449 DEBUG 2316 --- [http-nio-8080-exec-2] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:57:27.449 DEBUG 2316 --- [http-nio-8080-exec-2] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:57:27.450 DEBUG 2316 --- [http-nio-8080-exec-2] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:57:27.453 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 17:57:27.454 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:57:27.455 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:57:27.456  INFO 2316 --- [http-nio-8080-exec-2] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:58:54.688  INFO 2316 --- [http-nio-8080-exec-7] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:58:54.690 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:58:54.690 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:58:54.691 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:58:54.692 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 17:58:54.692 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:58:54.694 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:58:54.694  INFO 2316 --- [http-nio-8080-exec-7] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 17:59:33.887  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 17:59:33.888 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 17:59:33.889 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 17:59:33.890 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 17:59:33.891 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 17:59:33.892 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 17:59:33.893 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 17:59:33.893  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:02:18.983  INFO 2316 --- [http-nio-8080-exec-6] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:02:18.987 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:02:18.987 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:02:18.989 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:02:18.991 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:02:18.991 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:02:18.994 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:02:18.995  INFO 2316 --- [http-nio-8080-exec-6] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:02:32.259  INFO 2316 --- [http-nio-8080-exec-10] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:02:32.261 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:02:32.261 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:02:32.262 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:02:32.262 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:02:32.263 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:02:32.264 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:02:32.264  INFO 2316 --- [http-nio-8080-exec-10] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:03:13.525  INFO 2316 --- [http-nio-8080-exec-4] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:03:13.526 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:03:13.526 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:03:13.527 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:03:13.528 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:03:13.528 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:03:13.529 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:03:13.530  INFO 2316 --- [http-nio-8080-exec-4] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:04:44.230  INFO 2316 --- [http-nio-8080-exec-9] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:04:44.231 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:04:44.232 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:04:44.233 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:04:44.233 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:04:44.234 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:04:44.235 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:04:44.235  INFO 2316 --- [http-nio-8080-exec-9] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:05:46.307  INFO 2316 --- [http-nio-8080-exec-4] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:05:46.309 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:05:46.309 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:05:46.310 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:05:46.311 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:05:46.311 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:05:46.312 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:05:46.312  INFO 2316 --- [http-nio-8080-exec-4] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:06:00.065  INFO 2316 --- [http-nio-8080-exec-8] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:06:00.066 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:06:00.067 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:06:00.068 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:06:00.068 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:06:00.068 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:06:00.069 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:06:00.070  INFO 2316 --- [http-nio-8080-exec-8] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:07:09.267  INFO 2316 --- [http-nio-8080-exec-3] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:07:09.269 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:07:09.269 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:07:09.270 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:07:09.270 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:07:09.270 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:07:09.271 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:07:09.272  INFO 2316 --- [http-nio-8080-exec-3] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:13:34.571  INFO 2316 --- [http-nio-8080-exec-9] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:13:34.573 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:13:34.573 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:13:34.574 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:13:34.575 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:13:34.575 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:13:34.578 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:13:34.578  INFO 2316 --- [http-nio-8080-exec-9] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:14:01.169  INFO 2316 --- [http-nio-8080-exec-4] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:14:01.170 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:14:01.170 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:14:01.171 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:14:01.172 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:14:01.172 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:14:01.173 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:14:01.173  INFO 2316 --- [http-nio-8080-exec-4] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:17:31.557  INFO 2316 --- [http-nio-8080-exec-7] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:17:31.560 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:17:31.560 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:17:31.562 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:17:31.562 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:17:31.563 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:17:31.564 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:17:31.564  INFO 2316 --- [http-nio-8080-exec-7] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:18:18.254  INFO 2316 --- [http-nio-8080-exec-2] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:18:18.257 DEBUG 2316 --- [http-nio-8080-exec-2] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:18:18.257 DEBUG 2316 --- [http-nio-8080-exec-2] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:18:18.258 DEBUG 2316 --- [http-nio-8080-exec-2] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:18:18.259 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:18:18.259 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:18:18.261 DEBUG 2316 --- [http-nio-8080-exec-2] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:18:18.263  INFO 2316 --- [http-nio-8080-exec-2] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:18:47.542  INFO 2316 --- [http-nio-8080-exec-8] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:18:47.544 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:18:47.544 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:18:47.545 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:18:47.545 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:18:47.546 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:18:47.547 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:18:47.547  INFO 2316 --- [http-nio-8080-exec-8] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:19:06.678  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:19:06.679 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:19:06.679 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:19:06.680 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:19:06.681 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:19:06.681 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:19:06.682 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:19:06.682  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:21:53.065  INFO 2316 --- [http-nio-8080-exec-6] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:21:53.066 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:21:53.067 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:21:53.068 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:21:53.068 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:21:53.069 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:21:53.070 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:21:53.070  INFO 2316 --- [http-nio-8080-exec-6] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:26:57.172  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:26:57.173 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:26:57.174 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:26:57.174 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:26:57.175 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:26:57.176 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:26:57.178 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:26:57.179  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:27:15.765  INFO 2316 --- [http-nio-8080-exec-5] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:27:15.766 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:27:15.766 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:27:15.767 DEBUG 2316 --- [http-nio-8080-exec-5] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:27:15.768 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:27:15.768 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:27:15.769 DEBUG 2316 --- [http-nio-8080-exec-5] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:27:15.769  INFO 2316 --- [http-nio-8080-exec-5] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:27:43.594  INFO 2316 --- [http-nio-8080-exec-9] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:27:43.595 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:27:43.595 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:27:43.596 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:27:43.596 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:27:43.596 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:27:43.597 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:27:43.598  INFO 2316 --- [http-nio-8080-exec-9] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:28:15.232  INFO 2316 --- [http-nio-8080-exec-3] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:28:15.233 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:28:15.234 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:28:15.234 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:28:15.235 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:28:15.235 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:28:15.236 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:28:15.237  INFO 2316 --- [http-nio-8080-exec-3] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:29:22.054  INFO 2316 --- [http-nio-8080-exec-9] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:29:22.056 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:29:22.056 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:29:22.057 DEBUG 2316 --- [http-nio-8080-exec-9] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:29:22.057 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:29:22.058 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:29:22.059 DEBUG 2316 --- [http-nio-8080-exec-9] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:29:22.059  INFO 2316 --- [http-nio-8080-exec-9] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:31:54.502  INFO 2316 --- [http-nio-8080-exec-3] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:31:54.504 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:31:54.504 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:31:54.506 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:31:54.507 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:31:54.507 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:31:54.508 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:31:54.509  INFO 2316 --- [http-nio-8080-exec-3] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:31:55.958  INFO 2316 --- [http-nio-8080-exec-7] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:31:55.960 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:31:55.961 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:31:55.962 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:31:55.962 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:31:55.963 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:31:55.964 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:31:55.964  INFO 2316 --- [http-nio-8080-exec-7] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:33:01.103  INFO 2316 --- [http-nio-8080-exec-4] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:33:01.104 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:33:01.104 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:33:01.105 DEBUG 2316 --- [http-nio-8080-exec-4] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:33:01.105 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:33:01.106 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:33:01.107 DEBUG 2316 --- [http-nio-8080-exec-4] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:33:01.108  INFO 2316 --- [http-nio-8080-exec-4] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:33:33.010  INFO 2316 --- [http-nio-8080-exec-8] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:33:33.011 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:33:33.011 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:33:33.012 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:33:33.013 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:33:33.013 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:33:33.112 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:33:33.113  INFO 2316 --- [http-nio-8080-exec-8] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:33:58.048  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:33:58.050 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:33:58.050 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:33:58.050 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:33:58.051 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:33:58.051 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:33:58.052 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:33:58.052  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:37:13.054  INFO 2316 --- [http-nio-8080-exec-8] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:37:13.056 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:37:13.056 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:37:13.058 DEBUG 2316 --- [http-nio-8080-exec-8] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:37:13.059 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:37:13.060 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:37:13.061 DEBUG 2316 --- [http-nio-8080-exec-8] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:37:13.063  INFO 2316 --- [http-nio-8080-exec-8] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:37:17.252  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:37:17.253 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:37:17.254 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:37:17.255 DEBUG 2316 --- [http-nio-8080-exec-1] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:37:17.256 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:37:17.256 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:37:17.258 DEBUG 2316 --- [http-nio-8080-exec-1] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:37:17.259  INFO 2316 --- [http-nio-8080-exec-1] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:37:18.945  INFO 2316 --- [http-nio-8080-exec-6] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:37:18.946 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:37:18.946 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:37:18.948 DEBUG 2316 --- [http-nio-8080-exec-6] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:37:18.950 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:37:18.950 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:37:18.953 DEBUG 2316 --- [http-nio-8080-exec-6] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:37:18.954  INFO 2316 --- [http-nio-8080-exec-6] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:41:06.326  INFO 2316 --- [http-nio-8080-exec-10] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:41:06.327 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:41:06.327 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:41:06.328 DEBUG 2316 --- [http-nio-8080-exec-10] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:41:06.328 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:41:06.329 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:41:06.330 DEBUG 2316 --- [http-nio-8080-exec-10] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:41:06.330  INFO 2316 --- [http-nio-8080-exec-10] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:41:37.883  INFO 2316 --- [http-nio-8080-exec-3] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:41:37.884 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:41:37.884 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:41:37.885 DEBUG 2316 --- [http-nio-8080-exec-3] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:41:37.886 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:41:37.886 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:41:37.887 DEBUG 2316 --- [http-nio-8080-exec-3] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:41:37.887  INFO 2316 --- [http-nio-8080-exec-3] com.wjw.blog.aspect.LogAspect            : Result : index
2020-08-02 18:41:47.311  INFO 2316 --- [http-nio-8080-exec-7] com.wjw.blog.aspect.LogAspect            : Request : url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.wjw.blog.controller.IndexController.index', args=[{}, 1]}
2020-08-02 18:41:47.312 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==>  Preparing: SELECT count(0) FROM blog.blog b, blog.type t, blog.user u WHERE b.type_id = t.id AND b.user_id = u.id 
2020-08-02 18:41:47.312 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : ==> Parameters: 
2020-08-02 18:41:47.313 DEBUG 2316 --- [http-nio-8080-exec-7] c.w.b.dao.BlogDao.getAllBlogShow_COUNT   : <==      Total: 1
2020-08-02 18:41:47.314 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==>  Preparing: select b.id, b.title, b.first_picture, b.views, b.update_time, b.description, t.name, u.nickname, u.avatar from blog.blog b, blog.type t, blog.user u where b.type_id = t.id and b.user_id = u.id order by b.update_time desc LIMIT ? 
2020-08-02 18:41:47.314 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getAllBlogShow  : ==> Parameters: 6(Integer)
2020-08-02 18:41:47.315 DEBUG 2316 --- [http-nio-8080-exec-7] com.wjw.blog.dao.BlogDao.getAllBlogShow  : <==      Total: 1
2020-08-02 18:41:47.316  INFO 2316 --- [http-nio-8080-exec-7] com.wjw.blog.aspect.LogAspect            : Result : index
